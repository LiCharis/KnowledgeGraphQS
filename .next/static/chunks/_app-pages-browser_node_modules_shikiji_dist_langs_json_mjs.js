"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_shikiji_dist_langs_json_mjs"],{

/***/ "(app-pages-browser)/./node_modules/shikiji/dist/langs/json.mjs":
/*!**************************************************!*\
  !*** ./node_modules/shikiji/dist/langs/json.mjs ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ json; }\n/* harmony export */ });\nconst lang = Object.freeze({ \"information_for_contributors\": [\"This file has been converted from https://github.com/microsoft/vscode-JSON.tmLanguage/blob/master/JSON.tmLanguage\", \"If you want to provide a fix or improvement, please create a pull request against the original repository.\", \"Once accepted there, we are happy to receive an update request.\"], \"version\": \"https://github.com/microsoft/vscode-JSON.tmLanguage/commit/9bd83f1c252b375e957203f21793316203f61f70\", \"name\": \"json\", \"scopeName\": \"source.json\", \"patterns\": [{ \"include\": \"#value\" }], \"repository\": { \"array\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.array.begin.json\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.array.end.json\" } }, \"name\": \"meta.structure.array.json\", \"patterns\": [{ \"include\": \"#value\" }, { \"match\": \",\", \"name\": \"punctuation.separator.array.json\" }, { \"match\": \"[^\\\\s\\\\]]\", \"name\": \"invalid.illegal.expected-array-separator.json\" }] }, \"comments\": { \"patterns\": [{ \"begin\": \"/\\\\*\\\\*(?!/)\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.json\" } }, \"end\": \"\\\\*/\", \"name\": \"comment.block.documentation.json\" }, { \"begin\": \"/\\\\*\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.json\" } }, \"end\": \"\\\\*/\", \"name\": \"comment.block.json\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.comment.json\" } }, \"match\": \"(//).*$\\\\n?\", \"name\": \"comment.line.double-slash.js\" }] }, \"constant\": { \"match\": \"\\\\b(?:true|false|null)\\\\b\", \"name\": \"constant.language.json\" }, \"number\": { \"match\": \"(?x)        # turn on extended mode\\n  -?        # an optional minus\\n  (?:\\n    0       # a zero\\n    |       # ...or...\\n    [1-9]   # a 1-9 character\\n    \\\\d*     # followed by zero or more digits\\n  )\\n  (?:\\n    (?:\\n      \\\\.    # a period\\n      \\\\d+   # followed by one or more digits\\n    )?\\n    (?:\\n      [eE]  # an e character\\n      [+-]? # followed by an option +/-\\n      \\\\d+   # followed by one or more digits\\n    )?      # make exponent optional\\n  )?        # make decimal portion optional\", \"name\": \"constant.numeric.json\" }, \"object\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.dictionary.begin.json\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.dictionary.end.json\" } }, \"name\": \"meta.structure.dictionary.json\", \"patterns\": [{ \"comment\": \"the JSON object key\", \"include\": \"#objectkey\" }, { \"include\": \"#comments\" }, { \"begin\": \":\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.separator.dictionary.key-value.json\" } }, \"end\": \"(,)|(?=\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.separator.dictionary.pair.json\" } }, \"name\": \"meta.structure.dictionary.value.json\", \"patterns\": [{ \"comment\": \"the JSON object value\", \"include\": \"#value\" }, { \"match\": \"[^\\\\s,]\", \"name\": \"invalid.illegal.expected-dictionary-separator.json\" }] }, { \"match\": \"[^\\\\s\\\\}]\", \"name\": \"invalid.illegal.expected-dictionary-separator.json\" }] }, \"string\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.json\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.json\" } }, \"name\": \"string.quoted.double.json\", \"patterns\": [{ \"include\": \"#stringcontent\" }] }, \"objectkey\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.support.type.property-name.begin.json\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.support.type.property-name.end.json\" } }, \"name\": \"string.json support.type.property-name.json\", \"patterns\": [{ \"include\": \"#stringcontent\" }] }, \"stringcontent\": { \"patterns\": [{ \"match\": '(?x)                # turn on extended mode\\n  \\\\\\\\                # a literal backslash\\n  (?:               # ...followed by...\\n    [\"\\\\\\\\/bfnrt]     # one of these characters\\n    |               # ...or...\\n    u               # a u\\n    [0-9a-fA-F]{4}) # and four hex digits', \"name\": \"constant.character.escape.json\" }, { \"match\": \"\\\\\\\\.\", \"name\": \"invalid.illegal.unrecognized-string-escape.json\" }] }, \"value\": { \"patterns\": [{ \"include\": \"#constant\" }, { \"include\": \"#number\" }, { \"include\": \"#string\" }, { \"include\": \"#array\" }, { \"include\": \"#object\" }, { \"include\": \"#comments\" }] } }, \"displayName\": \"JSON\" });\nvar json = [\n  lang\n];\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zaGlraWppL2Rpc3QvbGFuZ3MvanNvbi5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLDZCQUE2QixxZkFBcWYscUJBQXFCLG1CQUFtQixXQUFXLG1DQUFtQyxPQUFPLHFEQUFxRCxpQ0FBaUMsT0FBTyxtREFBbUQsc0RBQXNELHFCQUFxQixJQUFJLDBEQUEwRCxJQUFJLCtFQUErRSxHQUFHLGdCQUFnQixlQUFlLHVDQUF1QyxPQUFPLGlEQUFpRCw2REFBNkQsSUFBSSwrQkFBK0IsT0FBTyxpREFBaUQsK0NBQStDLElBQUksY0FBYyxPQUFPLGlEQUFpRCxrRUFBa0UsR0FBRyxnQkFBZ0Isd0VBQXdFLGNBQWMsNmlCQUE2aUIsY0FBYyxhQUFhLHNCQUFzQixPQUFPLDBEQUEwRCxhQUFhLG9CQUFvQixPQUFPLHdEQUF3RCwyREFBMkQsMkRBQTJELElBQUksd0JBQXdCLElBQUksaUNBQWlDLE9BQU8sNkRBQTZELG9CQUFvQixxQkFBcUIsT0FBTyx3REFBd0QsaUVBQWlFLHlEQUF5RCxJQUFJLGtGQUFrRixHQUFHLElBQUksa0JBQWtCLGtFQUFrRSxHQUFHLGNBQWMsaUNBQWlDLE9BQU8sc0RBQXNELCtCQUErQixPQUFPLG9EQUFvRCxzREFBc0QsNkJBQTZCLEdBQUcsaUJBQWlCLGlDQUFpQyxPQUFPLCtEQUErRCwrQkFBK0IsT0FBTyw2REFBNkQsd0VBQXdFLDZCQUE2QixHQUFHLHFCQUFxQixlQUFlLHlRQUF5USxFQUFFLG9FQUFvRSxJQUFJLDZFQUE2RSxHQUFHLGFBQWEsZUFBZSx3QkFBd0IsSUFBSSxzQkFBc0IsSUFBSSxzQkFBc0IsSUFBSSxxQkFBcUIsSUFBSSxzQkFBc0IsSUFBSSx3QkFBd0IsS0FBSyx5QkFBeUI7QUFDbnFJO0FBQ0E7QUFDQTs7QUFFMkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NoaWtpamkvZGlzdC9sYW5ncy9qc29uLm1qcz9hOTQyIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGxhbmcgPSBPYmplY3QuZnJlZXplKHsgXCJpbmZvcm1hdGlvbl9mb3JfY29udHJpYnV0b3JzXCI6IFtcIlRoaXMgZmlsZSBoYXMgYmVlbiBjb252ZXJ0ZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vbWljcm9zb2Z0L3ZzY29kZS1KU09OLnRtTGFuZ3VhZ2UvYmxvYi9tYXN0ZXIvSlNPTi50bUxhbmd1YWdlXCIsIFwiSWYgeW91IHdhbnQgdG8gcHJvdmlkZSBhIGZpeCBvciBpbXByb3ZlbWVudCwgcGxlYXNlIGNyZWF0ZSBhIHB1bGwgcmVxdWVzdCBhZ2FpbnN0IHRoZSBvcmlnaW5hbCByZXBvc2l0b3J5LlwiLCBcIk9uY2UgYWNjZXB0ZWQgdGhlcmUsIHdlIGFyZSBoYXBweSB0byByZWNlaXZlIGFuIHVwZGF0ZSByZXF1ZXN0LlwiXSwgXCJ2ZXJzaW9uXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC92c2NvZGUtSlNPTi50bUxhbmd1YWdlL2NvbW1pdC85YmQ4M2YxYzI1MmIzNzVlOTU3MjAzZjIxNzkzMzE2MjAzZjYxZjcwXCIsIFwibmFtZVwiOiBcImpzb25cIiwgXCJzY29wZU5hbWVcIjogXCJzb3VyY2UuanNvblwiLCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiN2YWx1ZVwiIH1dLCBcInJlcG9zaXRvcnlcIjogeyBcImFycmF5XCI6IHsgXCJiZWdpblwiOiBcIlxcXFxbXCIsIFwiYmVnaW5DYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcInB1bmN0dWF0aW9uLmRlZmluaXRpb24uYXJyYXkuYmVnaW4uanNvblwiIH0gfSwgXCJlbmRcIjogXCJcXFxcXVwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwicHVuY3R1YXRpb24uZGVmaW5pdGlvbi5hcnJheS5lbmQuanNvblwiIH0gfSwgXCJuYW1lXCI6IFwibWV0YS5zdHJ1Y3R1cmUuYXJyYXkuanNvblwiLCBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiN2YWx1ZVwiIH0sIHsgXCJtYXRjaFwiOiBcIixcIiwgXCJuYW1lXCI6IFwicHVuY3R1YXRpb24uc2VwYXJhdG9yLmFycmF5Lmpzb25cIiB9LCB7IFwibWF0Y2hcIjogXCJbXlxcXFxzXFxcXF1dXCIsIFwibmFtZVwiOiBcImludmFsaWQuaWxsZWdhbC5leHBlY3RlZC1hcnJheS1zZXBhcmF0b3IuanNvblwiIH1dIH0sIFwiY29tbWVudHNcIjogeyBcInBhdHRlcm5zXCI6IFt7IFwiYmVnaW5cIjogXCIvXFxcXCpcXFxcKig/IS8pXCIsIFwiY2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLmNvbW1lbnQuanNvblwiIH0gfSwgXCJlbmRcIjogXCJcXFxcKi9cIiwgXCJuYW1lXCI6IFwiY29tbWVudC5ibG9jay5kb2N1bWVudGF0aW9uLmpzb25cIiB9LCB7IFwiYmVnaW5cIjogXCIvXFxcXCpcIiwgXCJjYXB0dXJlc1wiOiB7IFwiMFwiOiB7IFwibmFtZVwiOiBcInB1bmN0dWF0aW9uLmRlZmluaXRpb24uY29tbWVudC5qc29uXCIgfSB9LCBcImVuZFwiOiBcIlxcXFwqL1wiLCBcIm5hbWVcIjogXCJjb21tZW50LmJsb2NrLmpzb25cIiB9LCB7IFwiY2FwdHVyZXNcIjogeyBcIjFcIjogeyBcIm5hbWVcIjogXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLmNvbW1lbnQuanNvblwiIH0gfSwgXCJtYXRjaFwiOiBcIigvLykuKiRcXFxcbj9cIiwgXCJuYW1lXCI6IFwiY29tbWVudC5saW5lLmRvdWJsZS1zbGFzaC5qc1wiIH1dIH0sIFwiY29uc3RhbnRcIjogeyBcIm1hdGNoXCI6IFwiXFxcXGIoPzp0cnVlfGZhbHNlfG51bGwpXFxcXGJcIiwgXCJuYW1lXCI6IFwiY29uc3RhbnQubGFuZ3VhZ2UuanNvblwiIH0sIFwibnVtYmVyXCI6IHsgXCJtYXRjaFwiOiBcIig/eCkgICAgICAgICMgdHVybiBvbiBleHRlbmRlZCBtb2RlXFxuICAtPyAgICAgICAgIyBhbiBvcHRpb25hbCBtaW51c1xcbiAgKD86XFxuICAgIDAgICAgICAgIyBhIHplcm9cXG4gICAgfCAgICAgICAjIC4uLm9yLi4uXFxuICAgIFsxLTldICAgIyBhIDEtOSBjaGFyYWN0ZXJcXG4gICAgXFxcXGQqICAgICAjIGZvbGxvd2VkIGJ5IHplcm8gb3IgbW9yZSBkaWdpdHNcXG4gIClcXG4gICg/OlxcbiAgICAoPzpcXG4gICAgICBcXFxcLiAgICAjIGEgcGVyaW9kXFxuICAgICAgXFxcXGQrICAgIyBmb2xsb3dlZCBieSBvbmUgb3IgbW9yZSBkaWdpdHNcXG4gICAgKT9cXG4gICAgKD86XFxuICAgICAgW2VFXSAgIyBhbiBlIGNoYXJhY3RlclxcbiAgICAgIFsrLV0/ICMgZm9sbG93ZWQgYnkgYW4gb3B0aW9uICsvLVxcbiAgICAgIFxcXFxkKyAgICMgZm9sbG93ZWQgYnkgb25lIG9yIG1vcmUgZGlnaXRzXFxuICAgICk/ICAgICAgIyBtYWtlIGV4cG9uZW50IG9wdGlvbmFsXFxuICApPyAgICAgICAgIyBtYWtlIGRlY2ltYWwgcG9ydGlvbiBvcHRpb25hbFwiLCBcIm5hbWVcIjogXCJjb25zdGFudC5udW1lcmljLmpzb25cIiB9LCBcIm9iamVjdFwiOiB7IFwiYmVnaW5cIjogXCJcXFxce1wiLCBcImJlZ2luQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLmRpY3Rpb25hcnkuYmVnaW4uanNvblwiIH0gfSwgXCJlbmRcIjogXCJcXFxcfVwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwicHVuY3R1YXRpb24uZGVmaW5pdGlvbi5kaWN0aW9uYXJ5LmVuZC5qc29uXCIgfSB9LCBcIm5hbWVcIjogXCJtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5Lmpzb25cIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImNvbW1lbnRcIjogXCJ0aGUgSlNPTiBvYmplY3Qga2V5XCIsIFwiaW5jbHVkZVwiOiBcIiNvYmplY3RrZXlcIiB9LCB7IFwiaW5jbHVkZVwiOiBcIiNjb21tZW50c1wiIH0sIHsgXCJiZWdpblwiOiBcIjpcIiwgXCJiZWdpbkNhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwicHVuY3R1YXRpb24uc2VwYXJhdG9yLmRpY3Rpb25hcnkua2V5LXZhbHVlLmpzb25cIiB9IH0sIFwiZW5kXCI6IFwiKCwpfCg/PVxcXFx9KVwiLCBcImVuZENhcHR1cmVzXCI6IHsgXCIxXCI6IHsgXCJuYW1lXCI6IFwicHVuY3R1YXRpb24uc2VwYXJhdG9yLmRpY3Rpb25hcnkucGFpci5qc29uXCIgfSB9LCBcIm5hbWVcIjogXCJtZXRhLnN0cnVjdHVyZS5kaWN0aW9uYXJ5LnZhbHVlLmpzb25cIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImNvbW1lbnRcIjogXCJ0aGUgSlNPTiBvYmplY3QgdmFsdWVcIiwgXCJpbmNsdWRlXCI6IFwiI3ZhbHVlXCIgfSwgeyBcIm1hdGNoXCI6IFwiW15cXFxccyxdXCIsIFwibmFtZVwiOiBcImludmFsaWQuaWxsZWdhbC5leHBlY3RlZC1kaWN0aW9uYXJ5LXNlcGFyYXRvci5qc29uXCIgfV0gfSwgeyBcIm1hdGNoXCI6IFwiW15cXFxcc1xcXFx9XVwiLCBcIm5hbWVcIjogXCJpbnZhbGlkLmlsbGVnYWwuZXhwZWN0ZWQtZGljdGlvbmFyeS1zZXBhcmF0b3IuanNvblwiIH1dIH0sIFwic3RyaW5nXCI6IHsgXCJiZWdpblwiOiAnXCInLCBcImJlZ2luQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJwdW5jdHVhdGlvbi5kZWZpbml0aW9uLnN0cmluZy5iZWdpbi5qc29uXCIgfSB9LCBcImVuZFwiOiAnXCInLCBcImVuZENhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwicHVuY3R1YXRpb24uZGVmaW5pdGlvbi5zdHJpbmcuZW5kLmpzb25cIiB9IH0sIFwibmFtZVwiOiBcInN0cmluZy5xdW90ZWQuZG91YmxlLmpzb25cIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjc3RyaW5nY29udGVudFwiIH1dIH0sIFwib2JqZWN0a2V5XCI6IHsgXCJiZWdpblwiOiAnXCInLCBcImJlZ2luQ2FwdHVyZXNcIjogeyBcIjBcIjogeyBcIm5hbWVcIjogXCJwdW5jdHVhdGlvbi5zdXBwb3J0LnR5cGUucHJvcGVydHktbmFtZS5iZWdpbi5qc29uXCIgfSB9LCBcImVuZFwiOiAnXCInLCBcImVuZENhcHR1cmVzXCI6IHsgXCIwXCI6IHsgXCJuYW1lXCI6IFwicHVuY3R1YXRpb24uc3VwcG9ydC50eXBlLnByb3BlcnR5LW5hbWUuZW5kLmpzb25cIiB9IH0sIFwibmFtZVwiOiBcInN0cmluZy5qc29uIHN1cHBvcnQudHlwZS5wcm9wZXJ0eS1uYW1lLmpzb25cIiwgXCJwYXR0ZXJuc1wiOiBbeyBcImluY2x1ZGVcIjogXCIjc3RyaW5nY29udGVudFwiIH1dIH0sIFwic3RyaW5nY29udGVudFwiOiB7IFwicGF0dGVybnNcIjogW3sgXCJtYXRjaFwiOiAnKD94KSAgICAgICAgICAgICAgICAjIHR1cm4gb24gZXh0ZW5kZWQgbW9kZVxcbiAgXFxcXFxcXFwgICAgICAgICAgICAgICAgIyBhIGxpdGVyYWwgYmFja3NsYXNoXFxuICAoPzogICAgICAgICAgICAgICAjIC4uLmZvbGxvd2VkIGJ5Li4uXFxuICAgIFtcIlxcXFxcXFxcL2JmbnJ0XSAgICAgIyBvbmUgb2YgdGhlc2UgY2hhcmFjdGVyc1xcbiAgICB8ICAgICAgICAgICAgICAgIyAuLi5vci4uLlxcbiAgICB1ICAgICAgICAgICAgICAgIyBhIHVcXG4gICAgWzAtOWEtZkEtRl17NH0pICMgYW5kIGZvdXIgaGV4IGRpZ2l0cycsIFwibmFtZVwiOiBcImNvbnN0YW50LmNoYXJhY3Rlci5lc2NhcGUuanNvblwiIH0sIHsgXCJtYXRjaFwiOiBcIlxcXFxcXFxcLlwiLCBcIm5hbWVcIjogXCJpbnZhbGlkLmlsbGVnYWwudW5yZWNvZ25pemVkLXN0cmluZy1lc2NhcGUuanNvblwiIH1dIH0sIFwidmFsdWVcIjogeyBcInBhdHRlcm5zXCI6IFt7IFwiaW5jbHVkZVwiOiBcIiNjb25zdGFudFwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI251bWJlclwiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI3N0cmluZ1wiIH0sIHsgXCJpbmNsdWRlXCI6IFwiI2FycmF5XCIgfSwgeyBcImluY2x1ZGVcIjogXCIjb2JqZWN0XCIgfSwgeyBcImluY2x1ZGVcIjogXCIjY29tbWVudHNcIiB9XSB9IH0sIFwiZGlzcGxheU5hbWVcIjogXCJKU09OXCIgfSk7XG52YXIganNvbiA9IFtcbiAgbGFuZ1xuXTtcblxuZXhwb3J0IHsganNvbiBhcyBkZWZhdWx0IH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/shikiji/dist/langs/json.mjs\n"));

/***/ })

}]);