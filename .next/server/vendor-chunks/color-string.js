/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/color-string";
exports.ids = ["vendor-chunks/color-string"];
exports.modules = {

/***/ "(ssr)/./node_modules/color-string/index.js":
/*!********************************************!*\
  !*** ./node_modules/color-string/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* MIT license */ var colorNames = __webpack_require__(/*! color-name */ \"(ssr)/./node_modules/color-name/index.js\");\nvar swizzle = __webpack_require__(/*! simple-swizzle */ \"(ssr)/./node_modules/simple-swizzle/index.js\");\nvar hasOwnProperty = Object.hasOwnProperty;\nvar reverseNames = Object.create(null);\n// create a list of reverse color names\nfor(var name in colorNames){\n    if (hasOwnProperty.call(colorNames, name)) {\n        reverseNames[colorNames[name]] = name;\n    }\n}\nvar cs = module.exports = {\n    to: {},\n    get: {}\n};\ncs.get = function(string) {\n    var prefix = string.substring(0, 3).toLowerCase();\n    var val;\n    var model;\n    switch(prefix){\n        case \"hsl\":\n            val = cs.get.hsl(string);\n            model = \"hsl\";\n            break;\n        case \"hwb\":\n            val = cs.get.hwb(string);\n            model = \"hwb\";\n            break;\n        default:\n            val = cs.get.rgb(string);\n            model = \"rgb\";\n            break;\n    }\n    if (!val) {\n        return null;\n    }\n    return {\n        model: model,\n        value: val\n    };\n};\ncs.get.rgb = function(string) {\n    if (!string) {\n        return null;\n    }\n    var abbr = /^#([a-f0-9]{3,4})$/i;\n    var hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n    var rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n    var per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n    var keyword = /^(\\w+)$/;\n    var rgb = [\n        0,\n        0,\n        0,\n        1\n    ];\n    var match;\n    var i;\n    var hexAlpha;\n    if (match = string.match(hex)) {\n        hexAlpha = match[2];\n        match = match[1];\n        for(i = 0; i < 3; i++){\n            // https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n            var i2 = i * 2;\n            rgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n        }\n        if (hexAlpha) {\n            rgb[3] = parseInt(hexAlpha, 16) / 255;\n        }\n    } else if (match = string.match(abbr)) {\n        match = match[1];\n        hexAlpha = match[3];\n        for(i = 0; i < 3; i++){\n            rgb[i] = parseInt(match[i] + match[i], 16);\n        }\n        if (hexAlpha) {\n            rgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n        }\n    } else if (match = string.match(rgba)) {\n        for(i = 0; i < 3; i++){\n            rgb[i] = parseInt(match[i + 1], 0);\n        }\n        if (match[4]) {\n            if (match[5]) {\n                rgb[3] = parseFloat(match[4]) * 0.01;\n            } else {\n                rgb[3] = parseFloat(match[4]);\n            }\n        }\n    } else if (match = string.match(per)) {\n        for(i = 0; i < 3; i++){\n            rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n        }\n        if (match[4]) {\n            if (match[5]) {\n                rgb[3] = parseFloat(match[4]) * 0.01;\n            } else {\n                rgb[3] = parseFloat(match[4]);\n            }\n        }\n    } else if (match = string.match(keyword)) {\n        if (match[1] === \"transparent\") {\n            return [\n                0,\n                0,\n                0,\n                0\n            ];\n        }\n        if (!hasOwnProperty.call(colorNames, match[1])) {\n            return null;\n        }\n        rgb = colorNames[match[1]];\n        rgb[3] = 1;\n        return rgb;\n    } else {\n        return null;\n    }\n    for(i = 0; i < 3; i++){\n        rgb[i] = clamp(rgb[i], 0, 255);\n    }\n    rgb[3] = clamp(rgb[3], 0, 1);\n    return rgb;\n};\ncs.get.hsl = function(string) {\n    if (!string) {\n        return null;\n    }\n    var hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n    var match = string.match(hsl);\n    if (match) {\n        var alpha = parseFloat(match[4]);\n        var h = (parseFloat(match[1]) % 360 + 360) % 360;\n        var s = clamp(parseFloat(match[2]), 0, 100);\n        var l = clamp(parseFloat(match[3]), 0, 100);\n        var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n        return [\n            h,\n            s,\n            l,\n            a\n        ];\n    }\n    return null;\n};\ncs.get.hwb = function(string) {\n    if (!string) {\n        return null;\n    }\n    var hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n    var match = string.match(hwb);\n    if (match) {\n        var alpha = parseFloat(match[4]);\n        var h = (parseFloat(match[1]) % 360 + 360) % 360;\n        var w = clamp(parseFloat(match[2]), 0, 100);\n        var b = clamp(parseFloat(match[3]), 0, 100);\n        var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n        return [\n            h,\n            w,\n            b,\n            a\n        ];\n    }\n    return null;\n};\ncs.to.hex = function() {\n    var rgba = swizzle(arguments);\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (rgba[3] < 1 ? hexDouble(Math.round(rgba[3] * 255)) : \"\");\n};\ncs.to.rgb = function() {\n    var rgba = swizzle(arguments);\n    return rgba.length < 4 || rgba[3] === 1 ? \"rgb(\" + Math.round(rgba[0]) + \", \" + Math.round(rgba[1]) + \", \" + Math.round(rgba[2]) + \")\" : \"rgba(\" + Math.round(rgba[0]) + \", \" + Math.round(rgba[1]) + \", \" + Math.round(rgba[2]) + \", \" + rgba[3] + \")\";\n};\ncs.to.rgb.percent = function() {\n    var rgba = swizzle(arguments);\n    var r = Math.round(rgba[0] / 255 * 100);\n    var g = Math.round(rgba[1] / 255 * 100);\n    var b = Math.round(rgba[2] / 255 * 100);\n    return rgba.length < 4 || rgba[3] === 1 ? \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\" : \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + rgba[3] + \")\";\n};\ncs.to.hsl = function() {\n    var hsla = swizzle(arguments);\n    return hsla.length < 4 || hsla[3] === 1 ? \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\" : \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + hsla[3] + \")\";\n};\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function() {\n    var hwba = swizzle(arguments);\n    var a = \"\";\n    if (hwba.length >= 4 && hwba[3] !== 1) {\n        a = \", \" + hwba[3];\n    }\n    return \"hwb(\" + hwba[0] + \", \" + hwba[1] + \"%, \" + hwba[2] + \"%\" + a + \")\";\n};\ncs.to.keyword = function(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n};\n// helpers\nfunction clamp(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n}\nfunction hexDouble(num) {\n    var str = Math.round(num).toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/color-string/index.js\n");

/***/ })

};
;