/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/multipipe";
exports.ids = ["vendor-chunks/multipipe"];
exports.modules = {

/***/ "(ssr)/./node_modules/multipipe/index.js":
/*!*****************************************!*\
  !*** ./node_modules/multipipe/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Module dependencies.\n */ var duplexer = __webpack_require__(/*! duplexer2 */ \"(ssr)/./node_modules/duplexer2/index.js\");\nvar PassThrough = (__webpack_require__(/*! stream */ \"stream\").PassThrough);\nvar Readable = (__webpack_require__(/*! stream */ \"stream\").PassThrough);\nvar objectAssign = __webpack_require__(/*! object-assign */ \"(ssr)/./node_modules/object-assign/index.js\");\n/**\n * Slice reference.\n */ var slice = [].slice;\n/**\n * Duplexer options.\n */ var defaultOpts = {\n    bubbleErrors: false,\n    objectMode: true\n};\n/**\n * Expose `pipe`.\n */ module.exports = pipe;\n/**\n * Pipe.\n *\n * @param streams Array[Stream,...]\n * @param opts [Object]\n * @param cb [Function]\n * @return {Stream}\n * @api public\n */ function pipe(streams, opts, cb) {\n    if (!Array.isArray(streams)) {\n        streams = slice.call(arguments);\n        opts = null;\n        cb = null;\n    }\n    var lastArg = streams[streams.length - 1];\n    if (\"function\" == typeof lastArg) {\n        cb = streams.splice(-1)[0];\n        lastArg = streams[streams.length - 1];\n    }\n    if (\"object\" == typeof lastArg && typeof lastArg.pipe != \"function\") {\n        opts = streams.splice(-1)[0];\n    }\n    var first = streams[0];\n    var last = streams[streams.length - 1];\n    var ret;\n    opts = objectAssign({}, defaultOpts, opts);\n    if (!first) {\n        if (cb) process.nextTick(cb);\n        return new PassThrough(opts);\n    }\n    if (first.writable && last.readable) ret = duplexer(opts, first, last);\n    else if (streams.length == 1) ret = new Readable(opts).wrap(streams[0]);\n    else if (first.writable) ret = first;\n    else if (last.readable) ret = last;\n    else ret = new PassThrough(opts);\n    streams.forEach(function(stream, i) {\n        var next = streams[i + 1];\n        if (next) stream.pipe(next);\n        if (stream != ret) stream.on(\"error\", ret.emit.bind(ret, \"error\"));\n    });\n    if (cb) {\n        var ended = false;\n        ret.on(\"error\", end);\n        last.on(\"finish\", function() {\n            end();\n        });\n        last.on(\"close\", function() {\n            end();\n        });\n        function end(err) {\n            if (ended) return;\n            ended = true;\n            cb(err);\n        }\n    }\n    return ret;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlwaXBlL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUNBOztDQUVDLEdBRUQsSUFBSUEsV0FBV0MsbUJBQU9BLENBQUM7QUFDdkIsSUFBSUMsY0FBY0QseURBQTZCO0FBQy9DLElBQUlFLFdBQVdGLHlEQUE2QjtBQUM1QyxJQUFJRyxlQUFlSCxtQkFBT0EsQ0FBQztBQUUzQjs7Q0FFQyxHQUVELElBQUlJLFFBQVEsRUFBRSxDQUFDQSxLQUFLO0FBRXBCOztDQUVDLEdBRUQsSUFBSUMsY0FBYztJQUNoQkMsY0FBYztJQUNkQyxZQUFZO0FBQ2Q7QUFFQTs7Q0FFQyxHQUVEQyxPQUFPQyxPQUFPLEdBQUdDO0FBRWpCOzs7Ozs7OztDQVFDLEdBRUQsU0FBU0EsS0FBS0MsT0FBTyxFQUFFQyxJQUFJLEVBQUVDLEVBQUU7SUFDN0IsSUFBSSxDQUFDQyxNQUFNQyxPQUFPLENBQUNKLFVBQVU7UUFDM0JBLFVBQVVQLE1BQU1ZLElBQUksQ0FBQ0M7UUFDckJMLE9BQU87UUFDUEMsS0FBSztJQUNQO0lBRUEsSUFBSUssVUFBVVAsT0FBTyxDQUFDQSxRQUFRUSxNQUFNLEdBQUcsRUFBRTtJQUN6QyxJQUFJLGNBQWMsT0FBT0QsU0FBUztRQUNoQ0wsS0FBS0YsUUFBUVMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUU7UUFDMUJGLFVBQVVQLE9BQU8sQ0FBQ0EsUUFBUVEsTUFBTSxHQUFHLEVBQUU7SUFDdkM7SUFDQSxJQUFJLFlBQVksT0FBT0QsV0FBVyxPQUFPQSxRQUFRUixJQUFJLElBQUksWUFBWTtRQUNuRUUsT0FBT0QsUUFBUVMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDOUI7SUFDQSxJQUFJQyxRQUFRVixPQUFPLENBQUMsRUFBRTtJQUN0QixJQUFJVyxPQUFPWCxPQUFPLENBQUNBLFFBQVFRLE1BQU0sR0FBRyxFQUFFO0lBQ3RDLElBQUlJO0lBQ0pYLE9BQU9ULGFBQWEsQ0FBQyxHQUFHRSxhQUFhTztJQUVyQyxJQUFJLENBQUNTLE9BQU87UUFDVixJQUFJUixJQUFJVyxRQUFRQyxRQUFRLENBQUNaO1FBQ3pCLE9BQU8sSUFBSVosWUFBWVc7SUFDekI7SUFFQSxJQUFJUyxNQUFNSyxRQUFRLElBQUlKLEtBQUtLLFFBQVEsRUFBRUosTUFBTXhCLFNBQVNhLE1BQU1TLE9BQU9DO1NBQzVELElBQUlYLFFBQVFRLE1BQU0sSUFBSSxHQUFHSSxNQUFNLElBQUlyQixTQUFTVSxNQUFNZ0IsSUFBSSxDQUFDakIsT0FBTyxDQUFDLEVBQUU7U0FDakUsSUFBSVUsTUFBTUssUUFBUSxFQUFFSCxNQUFNRjtTQUMxQixJQUFJQyxLQUFLSyxRQUFRLEVBQUVKLE1BQU1EO1NBQ3pCQyxNQUFNLElBQUl0QixZQUFZVztJQUUzQkQsUUFBUWtCLE9BQU8sQ0FBQyxTQUFTQyxNQUFNLEVBQUVDLENBQUM7UUFDaEMsSUFBSUMsT0FBT3JCLE9BQU8sQ0FBQ29CLElBQUUsRUFBRTtRQUN2QixJQUFJQyxNQUFNRixPQUFPcEIsSUFBSSxDQUFDc0I7UUFDdEIsSUFBSUYsVUFBVVAsS0FBS08sT0FBT0csRUFBRSxDQUFDLFNBQVNWLElBQUlXLElBQUksQ0FBQ0MsSUFBSSxDQUFDWixLQUFLO0lBQzNEO0lBRUEsSUFBSVYsSUFBSTtRQUNOLElBQUl1QixRQUFRO1FBQ1piLElBQUlVLEVBQUUsQ0FBQyxTQUFTSTtRQUNoQmYsS0FBS1csRUFBRSxDQUFDLFVBQVU7WUFBWUk7UUFBTTtRQUNwQ2YsS0FBS1csRUFBRSxDQUFDLFNBQVM7WUFBWUk7UUFBTTtRQUNuQyxTQUFTQSxJQUFJQyxHQUFHO1lBQ2QsSUFBSUYsT0FBTztZQUNYQSxRQUFRO1lBQ1J2QixHQUFHeUI7UUFDTDtJQUNGO0lBRUEsT0FBT2Y7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL0tub3dsZWRnZUdyYXBoUVMvLi9ub2RlX21vZHVsZXMvbXVsdGlwaXBlL2luZGV4LmpzPzI1NjQiXSwic291cmNlc0NvbnRlbnQiOlsiXG4vKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKi9cblxudmFyIGR1cGxleGVyID0gcmVxdWlyZSgnZHVwbGV4ZXIyJyk7XG52YXIgUGFzc1Rocm91Z2ggPSByZXF1aXJlKCdzdHJlYW0nKS5QYXNzVGhyb3VnaDtcbnZhciBSZWFkYWJsZSA9IHJlcXVpcmUoJ3N0cmVhbScpLlBhc3NUaHJvdWdoO1xudmFyIG9iamVjdEFzc2lnbiA9IHJlcXVpcmUoJ29iamVjdC1hc3NpZ24nKTtcblxuLyoqXG4gKiBTbGljZSByZWZlcmVuY2UuXG4gKi9cblxudmFyIHNsaWNlID0gW10uc2xpY2U7XG5cbi8qKlxuICogRHVwbGV4ZXIgb3B0aW9ucy5cbiAqL1xuXG52YXIgZGVmYXVsdE9wdHMgPSB7XG4gIGJ1YmJsZUVycm9yczogZmFsc2UsXG4gIG9iamVjdE1vZGU6IHRydWVcbn07XG5cbi8qKlxuICogRXhwb3NlIGBwaXBlYC5cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IHBpcGU7XG5cbi8qKlxuICogUGlwZS5cbiAqXG4gKiBAcGFyYW0gc3RyZWFtcyBBcnJheVtTdHJlYW0sLi4uXVxuICogQHBhcmFtIG9wdHMgW09iamVjdF1cbiAqIEBwYXJhbSBjYiBbRnVuY3Rpb25dXG4gKiBAcmV0dXJuIHtTdHJlYW19XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIHBpcGUoc3RyZWFtcywgb3B0cywgY2Ipe1xuICBpZiAoIUFycmF5LmlzQXJyYXkoc3RyZWFtcykpIHtcbiAgICBzdHJlYW1zID0gc2xpY2UuY2FsbChhcmd1bWVudHMpO1xuICAgIG9wdHMgPSBudWxsO1xuICAgIGNiID0gbnVsbDtcbiAgfVxuXG4gIHZhciBsYXN0QXJnID0gc3RyZWFtc1tzdHJlYW1zLmxlbmd0aCAtIDFdO1xuICBpZiAoJ2Z1bmN0aW9uJyA9PSB0eXBlb2YgbGFzdEFyZykge1xuICAgIGNiID0gc3RyZWFtcy5zcGxpY2UoLTEpWzBdO1xuICAgIGxhc3RBcmcgPSBzdHJlYW1zW3N0cmVhbXMubGVuZ3RoIC0gMV07XG4gIH1cbiAgaWYgKCdvYmplY3QnID09IHR5cGVvZiBsYXN0QXJnICYmIHR5cGVvZiBsYXN0QXJnLnBpcGUgIT0gJ2Z1bmN0aW9uJykge1xuICAgIG9wdHMgPSBzdHJlYW1zLnNwbGljZSgtMSlbMF07XG4gIH1cbiAgdmFyIGZpcnN0ID0gc3RyZWFtc1swXTtcbiAgdmFyIGxhc3QgPSBzdHJlYW1zW3N0cmVhbXMubGVuZ3RoIC0gMV07XG4gIHZhciByZXQ7XG4gIG9wdHMgPSBvYmplY3RBc3NpZ24oe30sIGRlZmF1bHRPcHRzLCBvcHRzKVxuXG4gIGlmICghZmlyc3QpIHtcbiAgICBpZiAoY2IpIHByb2Nlc3MubmV4dFRpY2soY2IpO1xuICAgIHJldHVybiBuZXcgUGFzc1Rocm91Z2gob3B0cyk7XG4gIH1cbiAgXG4gIGlmIChmaXJzdC53cml0YWJsZSAmJiBsYXN0LnJlYWRhYmxlKSByZXQgPSBkdXBsZXhlcihvcHRzLCBmaXJzdCwgbGFzdCk7XG4gIGVsc2UgaWYgKHN0cmVhbXMubGVuZ3RoID09IDEpIHJldCA9IG5ldyBSZWFkYWJsZShvcHRzKS53cmFwKHN0cmVhbXNbMF0pO1xuICBlbHNlIGlmIChmaXJzdC53cml0YWJsZSkgcmV0ID0gZmlyc3Q7XG4gIGVsc2UgaWYgKGxhc3QucmVhZGFibGUpIHJldCA9IGxhc3Q7XG4gIGVsc2UgcmV0ID0gbmV3IFBhc3NUaHJvdWdoKG9wdHMpO1xuICBcbiAgc3RyZWFtcy5mb3JFYWNoKGZ1bmN0aW9uKHN0cmVhbSwgaSl7XG4gICAgdmFyIG5leHQgPSBzdHJlYW1zW2krMV07XG4gICAgaWYgKG5leHQpIHN0cmVhbS5waXBlKG5leHQpO1xuICAgIGlmIChzdHJlYW0gIT0gcmV0KSBzdHJlYW0ub24oJ2Vycm9yJywgcmV0LmVtaXQuYmluZChyZXQsICdlcnJvcicpKTtcbiAgfSk7XG5cbiAgaWYgKGNiKSB7XG4gICAgdmFyIGVuZGVkID0gZmFsc2U7XG4gICAgcmV0Lm9uKCdlcnJvcicsIGVuZCk7XG4gICAgbGFzdC5vbignZmluaXNoJywgZnVuY3Rpb24oKXsgZW5kKCkgfSk7XG4gICAgbGFzdC5vbignY2xvc2UnLCBmdW5jdGlvbigpeyBlbmQoKSB9KTtcbiAgICBmdW5jdGlvbiBlbmQoZXJyKXtcbiAgICAgIGlmIChlbmRlZCkgcmV0dXJuO1xuICAgICAgZW5kZWQgPSB0cnVlO1xuICAgICAgY2IoZXJyKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmV0O1xufVxuXG4iXSwibmFtZXMiOlsiZHVwbGV4ZXIiLCJyZXF1aXJlIiwiUGFzc1Rocm91Z2giLCJSZWFkYWJsZSIsIm9iamVjdEFzc2lnbiIsInNsaWNlIiwiZGVmYXVsdE9wdHMiLCJidWJibGVFcnJvcnMiLCJvYmplY3RNb2RlIiwibW9kdWxlIiwiZXhwb3J0cyIsInBpcGUiLCJzdHJlYW1zIiwib3B0cyIsImNiIiwiQXJyYXkiLCJpc0FycmF5IiwiY2FsbCIsImFyZ3VtZW50cyIsImxhc3RBcmciLCJsZW5ndGgiLCJzcGxpY2UiLCJmaXJzdCIsImxhc3QiLCJyZXQiLCJwcm9jZXNzIiwibmV4dFRpY2siLCJ3cml0YWJsZSIsInJlYWRhYmxlIiwid3JhcCIsImZvckVhY2giLCJzdHJlYW0iLCJpIiwibmV4dCIsIm9uIiwiZW1pdCIsImJpbmQiLCJlbmRlZCIsImVuZCIsImVyciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multipipe/index.js\n");

/***/ })

};
;