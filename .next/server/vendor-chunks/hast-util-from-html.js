"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/hast-util-from-html";
exports.ids = ["vendor-chunks/hast-util-from-html"];
exports.modules = {

/***/ "(ssr)/./node_modules/hast-util-from-html/lib/errors.js":
/*!********************************************************!*\
  !*** ./node_modules/hast-util-from-html/lib/errors.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   errors: () => (/* binding */ errors)\n/* harmony export */ });\nconst errors = {\n    abandonedHeadElementChild: {\n        reason: \"Unexpected metadata element after head\",\n        description: \"Unexpected element after head. Expected the element before `</head>`\",\n        url: false\n    },\n    abruptClosingOfEmptyComment: {\n        reason: \"Unexpected abruptly closed empty comment\",\n        description: \"Unexpected `>` or `->`. Expected `-->` to close comments\"\n    },\n    abruptDoctypePublicIdentifier: {\n        reason: \"Unexpected abruptly closed public identifier\",\n        description: \"Unexpected `>`. Expected a closing `\\\"` or `'` after the public identifier\"\n    },\n    abruptDoctypeSystemIdentifier: {\n        reason: \"Unexpected abruptly closed system identifier\",\n        description: \"Unexpected `>`. Expected a closing `\\\"` or `'` after the identifier identifier\"\n    },\n    absenceOfDigitsInNumericCharacterReference: {\n        reason: \"Unexpected non-digit at start of numeric character reference\",\n        description: \"Unexpected `%c`. Expected `[0-9]` for decimal references or `[0-9a-fA-F]` for hexadecimal references\"\n    },\n    cdataInHtmlContent: {\n        reason: \"Unexpected CDATA section in HTML\",\n        description: \"Unexpected `<![CDATA[` in HTML. Remove it, use a comment, or encode special characters instead\"\n    },\n    characterReferenceOutsideUnicodeRange: {\n        reason: \"Unexpected too big numeric character reference\",\n        description: \"Unexpectedly high character reference. Expected character references to be at most hexadecimal 10ffff (or decimal 1114111)\"\n    },\n    closingOfElementWithOpenChildElements: {\n        reason: \"Unexpected closing tag with open child elements\",\n        description: \"Unexpectedly closing tag. Expected other tags to be closed first\",\n        url: false\n    },\n    controlCharacterInInputStream: {\n        reason: \"Unexpected control character\",\n        description: \"Unexpected control character `%x`. Expected a non-control code point, 0x00, or ASCII whitespace\"\n    },\n    controlCharacterReference: {\n        reason: \"Unexpected control character reference\",\n        description: \"Unexpectedly control character in reference. Expected a non-control code point, 0x00, or ASCII whitespace\"\n    },\n    disallowedContentInNoscriptInHead: {\n        reason: \"Disallowed content inside `<noscript>` in `<head>`\",\n        description: \"Unexpected text character `%c`. Only use text in `<noscript>`s in `<body>`\",\n        url: false\n    },\n    duplicateAttribute: {\n        reason: \"Unexpected duplicate attribute\",\n        description: \"Unexpectedly double attribute. Expected attributes to occur only once\"\n    },\n    endTagWithAttributes: {\n        reason: \"Unexpected attribute on closing tag\",\n        description: \"Unexpected attribute. Expected `>` instead\"\n    },\n    endTagWithTrailingSolidus: {\n        reason: \"Unexpected slash at end of closing tag\",\n        description: \"Unexpected `%c-1`. Expected `>` instead\"\n    },\n    endTagWithoutMatchingOpenElement: {\n        reason: \"Unexpected unopened end tag\",\n        description: \"Unexpected end tag. Expected no end tag or another end tag\",\n        url: false\n    },\n    eofBeforeTagName: {\n        reason: \"Unexpected end of file\",\n        description: \"Unexpected end of file. Expected tag name instead\"\n    },\n    eofInCdata: {\n        reason: \"Unexpected end of file in CDATA\",\n        description: \"Unexpected end of file. Expected `]]>` to close the CDATA\"\n    },\n    eofInComment: {\n        reason: \"Unexpected end of file in comment\",\n        description: \"Unexpected end of file. Expected `-->` to close the comment\"\n    },\n    eofInDoctype: {\n        reason: \"Unexpected end of file in doctype\",\n        description: \"Unexpected end of file. Expected a valid doctype (such as `<!doctype html>`)\"\n    },\n    eofInElementThatCanContainOnlyText: {\n        reason: \"Unexpected end of file in element that can only contain text\",\n        description: \"Unexpected end of file. Expected text or a closing tag\",\n        url: false\n    },\n    eofInScriptHtmlCommentLikeText: {\n        reason: \"Unexpected end of file in comment inside script\",\n        description: \"Unexpected end of file. Expected `-->` to close the comment\"\n    },\n    eofInTag: {\n        reason: \"Unexpected end of file in tag\",\n        description: \"Unexpected end of file. Expected `>` to close the tag\"\n    },\n    incorrectlyClosedComment: {\n        reason: \"Incorrectly closed comment\",\n        description: \"Unexpected `%c-1`. Expected `-->` to close the comment\"\n    },\n    incorrectlyOpenedComment: {\n        reason: \"Incorrectly opened comment\",\n        description: \"Unexpected `%c`. Expected `<!--` to open the comment\"\n    },\n    invalidCharacterSequenceAfterDoctypeName: {\n        reason: \"Invalid sequence after doctype name\",\n        description: \"Unexpected sequence at `%c`. Expected `public` or `system`\"\n    },\n    invalidFirstCharacterOfTagName: {\n        reason: \"Invalid first character in tag name\",\n        description: \"Unexpected `%c`. Expected an ASCII letter instead\"\n    },\n    misplacedDoctype: {\n        reason: \"Misplaced doctype\",\n        description: \"Unexpected doctype. Expected doctype before head\",\n        url: false\n    },\n    misplacedStartTagForHeadElement: {\n        reason: \"Misplaced `<head>` start tag\",\n        description: \"Unexpected start tag `<head>`. Expected `<head>` directly after doctype\",\n        url: false\n    },\n    missingAttributeValue: {\n        reason: \"Missing attribute value\",\n        description: \"Unexpected `%c-1`. Expected an attribute value or no `%c-1` instead\"\n    },\n    missingDoctype: {\n        reason: \"Missing doctype before other content\",\n        description: \"Expected a `<!doctype html>` before anything else\",\n        url: false\n    },\n    missingDoctypeName: {\n        reason: \"Missing doctype name\",\n        description: \"Unexpected doctype end at `%c`. Expected `html` instead\"\n    },\n    missingDoctypePublicIdentifier: {\n        reason: \"Missing public identifier in doctype\",\n        description: \"Unexpected `%c`. Expected identifier for `public` instead\"\n    },\n    missingDoctypeSystemIdentifier: {\n        reason: \"Missing system identifier in doctype\",\n        description: 'Unexpected `%c`. Expected identifier for `system` instead (suggested: `\"about:legacy-compat\"`)'\n    },\n    missingEndTagName: {\n        reason: \"Missing name in end tag\",\n        description: \"Unexpected `%c`. Expected an ASCII letter instead\"\n    },\n    missingQuoteBeforeDoctypePublicIdentifier: {\n        reason: \"Missing quote before public identifier in doctype\",\n        description: \"Unexpected `%c`. Expected `\\\"` or `'` instead\"\n    },\n    missingQuoteBeforeDoctypeSystemIdentifier: {\n        reason: \"Missing quote before system identifier in doctype\",\n        description: \"Unexpected `%c`. Expected `\\\"` or `'` instead\"\n    },\n    missingSemicolonAfterCharacterReference: {\n        reason: \"Missing semicolon after character reference\",\n        description: \"Unexpected `%c`. Expected `;` instead\"\n    },\n    missingWhitespaceAfterDoctypePublicKeyword: {\n        reason: \"Missing whitespace after public identifier in doctype\",\n        description: \"Unexpected `%c`. Expected ASCII whitespace instead\"\n    },\n    missingWhitespaceAfterDoctypeSystemKeyword: {\n        reason: \"Missing whitespace after system identifier in doctype\",\n        description: \"Unexpected `%c`. Expected ASCII whitespace instead\"\n    },\n    missingWhitespaceBeforeDoctypeName: {\n        reason: \"Missing whitespace before doctype name\",\n        description: \"Unexpected `%c`. Expected ASCII whitespace instead\"\n    },\n    missingWhitespaceBetweenAttributes: {\n        reason: \"Missing whitespace between attributes\",\n        description: \"Unexpected `%c`. Expected ASCII whitespace instead\"\n    },\n    missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers: {\n        reason: \"Missing whitespace between public and system identifiers in doctype\",\n        description: \"Unexpected `%c`. Expected ASCII whitespace instead\"\n    },\n    nestedComment: {\n        reason: \"Unexpected nested comment\",\n        description: \"Unexpected `<!--`. Expected `-->`\"\n    },\n    nestedNoscriptInHead: {\n        reason: \"Unexpected nested `<noscript>` in `<head>`\",\n        description: \"Unexpected `<noscript>`. Expected a closing tag or a meta element\",\n        url: false\n    },\n    nonConformingDoctype: {\n        reason: \"Unexpected non-conforming doctype declaration\",\n        description: 'Expected `<!doctype html>` or `<!doctype html system \"about:legacy-compat\">`',\n        url: false\n    },\n    nonVoidHtmlElementStartTagWithTrailingSolidus: {\n        reason: \"Unexpected trailing slash on start tag of non-void element\",\n        description: \"Unexpected `/`. Expected `>` instead\"\n    },\n    noncharacterCharacterReference: {\n        reason: \"Unexpected noncharacter code point referenced by character reference\",\n        description: \"Unexpected code point. Do not use noncharacters in HTML\"\n    },\n    noncharacterInInputStream: {\n        reason: \"Unexpected noncharacter character\",\n        description: \"Unexpected code point `%x`. Do not use noncharacters in HTML\"\n    },\n    nullCharacterReference: {\n        reason: \"Unexpected NULL character referenced by character reference\",\n        description: \"Unexpected code point. Do not use NULL characters in HTML\"\n    },\n    openElementsLeftAfterEof: {\n        reason: \"Unexpected end of file\",\n        description: \"Unexpected end of file. Expected closing tag instead\",\n        url: false\n    },\n    surrogateCharacterReference: {\n        reason: \"Unexpected surrogate character referenced by character reference\",\n        description: \"Unexpected code point. Do not use lone surrogate characters in HTML\"\n    },\n    surrogateInInputStream: {\n        reason: \"Unexpected surrogate character\",\n        description: \"Unexpected code point `%x`. Do not use lone surrogate characters in HTML\"\n    },\n    unexpectedCharacterAfterDoctypeSystemIdentifier: {\n        reason: \"Invalid character after system identifier in doctype\",\n        description: \"Unexpected character at `%c`. Expected `>`\"\n    },\n    unexpectedCharacterInAttributeName: {\n        reason: \"Unexpected character in attribute name\",\n        description: \"Unexpected `%c`. Expected whitespace, `/`, `>`, `=`, or probably an ASCII letter\"\n    },\n    unexpectedCharacterInUnquotedAttributeValue: {\n        reason: \"Unexpected character in unquoted attribute value\",\n        description: \"Unexpected `%c`. Quote the attribute value to include it\"\n    },\n    unexpectedEqualsSignBeforeAttributeName: {\n        reason: \"Unexpected equals sign before attribute name\",\n        description: \"Unexpected `%c`. Add an attribute name before it\"\n    },\n    unexpectedNullCharacter: {\n        reason: \"Unexpected NULL character\",\n        description: \"Unexpected code point `%x`. Do not use NULL characters in HTML\"\n    },\n    unexpectedQuestionMarkInsteadOfTagName: {\n        reason: \"Unexpected question mark instead of tag name\",\n        description: \"Unexpected `%c`. Expected an ASCII letter instead\"\n    },\n    unexpectedSolidusInTag: {\n        reason: \"Unexpected slash in tag\",\n        description: \"Unexpected `%c-1`. Expected it followed by `>` or in a quoted attribute value\"\n    },\n    unknownNamedCharacterReference: {\n        reason: \"Unexpected unknown named character reference\",\n        description: \"Unexpected character reference. Expected known named character references\"\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLWZyb20taHRtbC9saWIvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQSxTQUFTO0lBQ3BCQywyQkFBMkI7UUFDekJDLFFBQVE7UUFDUkMsYUFDRTtRQUNGQyxLQUFLO0lBQ1A7SUFDQUMsNkJBQTZCO1FBQzNCSCxRQUFRO1FBQ1JDLGFBQWE7SUFDZjtJQUNBRywrQkFBK0I7UUFDN0JKLFFBQVE7UUFDUkMsYUFDRTtJQUNKO0lBQ0FJLCtCQUErQjtRQUM3QkwsUUFBUTtRQUNSQyxhQUNFO0lBQ0o7SUFDQUssNENBQTRDO1FBQzFDTixRQUFRO1FBQ1JDLGFBQ0U7SUFDSjtJQUNBTSxvQkFBb0I7UUFDbEJQLFFBQVE7UUFDUkMsYUFDRTtJQUNKO0lBQ0FPLHVDQUF1QztRQUNyQ1IsUUFBUTtRQUNSQyxhQUNFO0lBQ0o7SUFDQVEsdUNBQXVDO1FBQ3JDVCxRQUFRO1FBQ1JDLGFBQ0U7UUFDRkMsS0FBSztJQUNQO0lBQ0FRLCtCQUErQjtRQUM3QlYsUUFBUTtRQUNSQyxhQUNFO0lBQ0o7SUFDQVUsMkJBQTJCO1FBQ3pCWCxRQUFRO1FBQ1JDLGFBQ0U7SUFDSjtJQUNBVyxtQ0FBbUM7UUFDakNaLFFBQVE7UUFDUkMsYUFDRTtRQUNGQyxLQUFLO0lBQ1A7SUFDQVcsb0JBQW9CO1FBQ2xCYixRQUFRO1FBQ1JDLGFBQ0U7SUFDSjtJQUNBYSxzQkFBc0I7UUFDcEJkLFFBQVE7UUFDUkMsYUFBYTtJQUNmO0lBQ0FjLDJCQUEyQjtRQUN6QmYsUUFBUTtRQUNSQyxhQUFhO0lBQ2Y7SUFDQWUsa0NBQWtDO1FBQ2hDaEIsUUFBUTtRQUNSQyxhQUFhO1FBQ2JDLEtBQUs7SUFDUDtJQUNBZSxrQkFBa0I7UUFDaEJqQixRQUFRO1FBQ1JDLGFBQWE7SUFDZjtJQUNBaUIsWUFBWTtRQUNWbEIsUUFBUTtRQUNSQyxhQUFhO0lBQ2Y7SUFDQWtCLGNBQWM7UUFDWm5CLFFBQVE7UUFDUkMsYUFBYTtJQUNmO0lBQ0FtQixj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LFFBQVE7UUFDUkMsYUFDRTtJQUNKO0lBQ0E0RCxnQ0FBZ0M7UUFDOUI3RCxRQUFRO1FBQ1JDLGFBQ0U7SUFDSjtBQUNGLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Lbm93bGVkZ2VHcmFwaFFTLy4vbm9kZV9tb2R1bGVzL2hhc3QtdXRpbC1mcm9tLWh0bWwvbGliL2Vycm9ycy5qcz9iNGM3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBlcnJvcnMgPSB7XG4gIGFiYW5kb25lZEhlYWRFbGVtZW50Q2hpbGQ6IHtcbiAgICByZWFzb246ICdVbmV4cGVjdGVkIG1ldGFkYXRhIGVsZW1lbnQgYWZ0ZXIgaGVhZCcsXG4gICAgZGVzY3JpcHRpb246XG4gICAgICAnVW5leHBlY3RlZCBlbGVtZW50IGFmdGVyIGhlYWQuIEV4cGVjdGVkIHRoZSBlbGVtZW50IGJlZm9yZSBgPC9oZWFkPmAnLFxuICAgIHVybDogZmFsc2VcbiAgfSxcbiAgYWJydXB0Q2xvc2luZ09mRW1wdHlDb21tZW50OiB7XG4gICAgcmVhc29uOiAnVW5leHBlY3RlZCBhYnJ1cHRseSBjbG9zZWQgZW1wdHkgY29tbWVudCcsXG4gICAgZGVzY3JpcHRpb246ICdVbmV4cGVjdGVkIGA+YCBvciBgLT5gLiBFeHBlY3RlZCBgLS0+YCB0byBjbG9zZSBjb21tZW50cydcbiAgfSxcbiAgYWJydXB0RG9jdHlwZVB1YmxpY0lkZW50aWZpZXI6IHtcbiAgICByZWFzb246ICdVbmV4cGVjdGVkIGFicnVwdGx5IGNsb3NlZCBwdWJsaWMgaWRlbnRpZmllcicsXG4gICAgZGVzY3JpcHRpb246XG4gICAgICAnVW5leHBlY3RlZCBgPmAuIEV4cGVjdGVkIGEgY2xvc2luZyBgXCJgIG9yIGBcXCdgIGFmdGVyIHRoZSBwdWJsaWMgaWRlbnRpZmllcidcbiAgfSxcbiAgYWJydXB0RG9jdHlwZVN5c3RlbUlkZW50aWZpZXI6IHtcbiAgICByZWFzb246ICdVbmV4cGVjdGVkIGFicnVwdGx5IGNsb3NlZCBzeXN0ZW0gaWRlbnRpZmllcicsXG4gICAgZGVzY3JpcHRpb246XG4gICAgICAnVW5leHBlY3RlZCBgPmAuIEV4cGVjdGVkIGEgY2xvc2luZyBgXCJgIG9yIGBcXCdgIGFmdGVyIHRoZSBpZGVudGlmaWVyIGlkZW50aWZpZXInXG4gIH0sXG4gIGFic2VuY2VPZkRpZ2l0c0luTnVtZXJpY0NoYXJhY3RlclJlZmVyZW5jZToge1xuICAgIHJlYXNvbjogJ1VuZXhwZWN0ZWQgbm9uLWRpZ2l0IGF0IHN0YXJ0IG9mIG51bWVyaWMgY2hhcmFjdGVyIHJlZmVyZW5jZScsXG4gICAgZGVzY3JpcHRpb246XG4gICAgICAnVW5leHBlY3RlZCBgJWNgLiBFeHBlY3RlZCBgWzAtOV1gIGZvciBkZWNpbWFsIHJlZmVyZW5jZXMgb3IgYFswLTlhLWZBLUZdYCBmb3IgaGV4YWRlY2ltYWwgcmVmZXJlbmNlcydcbiAgfSxcbiAgY2RhdGFJbkh0bWxDb250ZW50OiB7XG4gICAgcmVhc29uOiAnVW5leHBlY3RlZCBDREFUQSBzZWN0aW9uIGluIEhUTUwnLFxuICAgIGRlc2NyaXB0aW9uOlxuICAgICAgJ1VuZXhwZWN0ZWQgYDwhW0NEQVRBW2AgaW4gSFRNTC4gUmVtb3ZlIGl0LCB1c2UgYSBjb21tZW50LCBvciBlbmNvZGUgc3BlY2lhbCBjaGFyYWN0ZXJzIGluc3RlYWQnXG4gIH0sXG4gIGNoYXJhY3RlclJlZmVyZW5jZU91dHNpZGVVbmljb2RlUmFuZ2U6IHtcbiAgICByZWFzb246ICdVbmV4cGVjdGVkIHRvbyBiaWcgbnVtZXJpYyBjaGFyYWN0ZXIgcmVmZXJlbmNlJyxcbiAgICBkZXNjcmlwdGlvbjpcbiAgICAgICdVbmV4cGVjdGVkbHkgaGlnaCBjaGFyYWN0ZXIgcmVmZXJlbmNlLiBFeHBlY3RlZCBjaGFyYWN0ZXIgcmVmZXJlbmNlcyB0byBiZSBhdCBtb3N0IGhleGFkZWNpbWFsIDEwZmZmZiAob3IgZGVjaW1hbCAxMTE0MTExKSdcbiAgfSxcbiAgY2xvc2luZ09mRWxlbWVudFdpdGhPcGVuQ2hpbGRFbGVtZW50czoge1xuICAgIHJlYXNvbjogJ1VuZXhwZWN0ZWQgY2xvc2luZyB0YWcgd2l0aCBvcGVuIGNoaWxkIGVsZW1lbnRzJyxcbiAgICBkZXNjcmlwdGlvbjpcbiAgICAgICdVbmV4cGVjdGVkbHkgY2xvc2luZyB0YWcuIEV4cGVjdGVkIG90aGVyIHRhZ3MgdG8gYmUgY2xvc2VkIGZpcnN0JyxcbiAgICB1cmw6IGZhbHNlXG4gIH0sXG4gIGNvbnRyb2xDaGFyYWN0ZXJJbklucHV0U3RyZWFtOiB7XG4gICAgcmVhc29uOiAnVW5leHBlY3RlZCBjb250cm9sIGNoYXJhY3RlcicsXG4gICAgZGVzY3JpcHRpb246XG4gICAgICAnVW5leHBlY3RlZCBjb250cm9sIGNoYXJhY3RlciBgJXhgLiBFeHBlY3RlZCBhIG5vbi1jb250cm9sIGNvZGUgcG9pbnQsIDB4MDAsIG9yIEFTQ0lJIHdoaXRlc3BhY2UnXG4gIH0sXG4gIGNvbnRyb2xDaGFyYWN0ZXJSZWZlcmVuY2U6IHtcbiAgICByZWFzb246ICdVbmV4cGVjdGVkIGNvbnRyb2wgY2hhcmFjdGVyIHJlZmVyZW5jZScsXG4gICAgZGVzY3JpcHRpb246XG4gICAgICAnVW5leHBlY3RlZGx5IGNvbnRyb2wgY2hhcmFjdGVyIGluIHJlZmVyZW5jZS4gRXhwZWN0ZWQgYSBub24tY29udHJvbCBjb2RlIHBvaW50LCAweDAwLCBvciBBU0NJSSB3aGl0ZXNwYWNlJ1xuICB9LFxuICBkaXNhbGxvd2VkQ29udGVudEluTm9zY3JpcHRJbkhlYWQ6IHtcbiAgICByZWFzb246ICdEaXNhbGxvd2VkIGNvbnRlbnQgaW5zaWRlIGA8bm9zY3JpcHQ+YCBpbiBgPGhlYWQ+YCcsXG4gICAgZGVzY3JpcHRpb246XG4gICAgICAnVW5leHBlY3RlZCB0ZXh0IGNoYXJhY3RlciBgJWNgLiBPbmx5IHVzZSB0ZXh0IGluIGA8bm9zY3JpcHQ+YHMgaW4gYDxib2R5PmAnLFxuICAgIHVybDogZmFsc2VcbiAgfSxcbiAgZHVwbGljYXRlQXR0cmlidXRlOiB7XG4gICAgcmVhc29uOiAnVW5leHBlY3RlZCBkdXBsaWNhdGUgYXR0cmlidXRlJyxcbiAgICBkZXNjcmlwdGlvbjpcbiAgICAgICdVbmV4cGVjdGVkbHkgZG91YmxlIGF0dHJpYnV0ZS4gRXhwZWN0ZWQgYXR0cmlidXRlcyB0byBvY2N1ciBvbmx5IG9uY2UnXG4gIH0sXG4gIGVuZFRhZ1dpdGhBdHRyaWJ1dGVzOiB7XG4gICAgcmVhc29uOiAnVW5leHBlY3RlZCBhdHRyaWJ1dGUgb24gY2xvc2luZyB0YWcnLFxuICAgIGRlc2NyaXB0aW9uOiAnVW5leHBlY3RlZCBhdHRyaWJ1dGUuIEV4cGVjdGVkIGA+YCBpbnN0ZWFkJ1xuICB9LFxuICBlbmRUYWdXaXRoVHJhaWxpbmdTb2xpZHVzOiB7XG4gICAgcmVhc29uOiAnVW5leHBlY3RlZCBzbGFzaCBhdCBlbmQgb2YgY2xvc2luZyB0YWcnLFxuICAgIGRlc2NyaXB0aW9uOiAnVW5leHBlY3RlZCBgJWMtMWAuIEV4cGVjdGVkIGA+YCBpbnN0ZWFkJ1xuICB9LFxuICBlbmRUYWdXaXRob3V0TWF0Y2hpbmdPcGVuRWxlbWVudDoge1xuICAgIHJlYXNvbjogJ1VuZXhwZWN0ZWQgdW5vcGVuZWQgZW5kIHRhZycsXG4gICAgZGVzY3JpcHRpb246ICdVbmV4cGVjdGVkIGVuZCB0YWcuIEV4cGVjdGVkIG5vIGVuZCB0YWcgb3IgYW5vdGhlciBlbmQgdGFnJyxcbiAgICB1cmw6IGZhbHNlXG4gIH0sXG4gIGVvZkJlZm9yZVRhZ05hbWU6IHtcbiAgICByZWFzb246ICdVbmV4cGVjdGVkIGVuZCBvZiBmaWxlJyxcbiAgICBkZXNjcmlwdGlvbjogJ1VuZXhwZWN0ZWQgZW5kIG9mIGZpbGUuIEV4cGVjdGVkIHRhZyBuYW1lIGluc3RlYWQnXG4gIH0sXG4gIGVvZkluQ2RhdGE6IHtcbiAgICByZWFzb246ICdVbmV4cGVjdGVkIGVuZCBvZiBmaWxlIGluIENEQVRBJyxcbiAgICBkZXNjcmlwdGlvbjogJ1VuZXhwZWN0ZWQgZW5kIG9mIGZpbGUuIEV4cGVjdGVkIGBdXT5gIHRvIGNsb3NlIHRoZSBDREFUQSdcbiAgfSxcbiAgZW9mSW5Db21tZW50OiB7XG4gICAgcmVhc29uOiAnVW5leHBlY3RlZCBlbmQgb2YgZmlsZSBpbiBjb21tZW50JyxcbiAgICBkZXNjcmlwdGlvbjogJ1VuZXhwZWN0ZWQgZW5kIG9mIGZpbGUuIEV4cGVjdGVkIGAtLT5gIHRvIGNsb3NlIHRoZSBjb21tZW50J1xuICB9LFxuICBlb2ZJbkRvY3R5cGU6IHtcbiAgICByZWFzb246ICdVbmV4cGVjdGVkIGVuZCBvZiBmaWxlIGluIGRvY3R5cGUnLFxuICAgIGRlc2NyaXB0aW9uOlxuICAgICAgJ1VuZXhwZWN0ZWQgZW5kIG9mIGZpbGUuIEV4cGVjdGVkIGEgdmFsaWQgZG9jdHlwZSAoc3VjaCBhcyBgPCFkb2N0eXBlIGh0bWw+YCknXG4gIH0sXG4gIGVvZkluRWxlbWVudFRoYXRDYW5Db250YWluT25seVRleHQ6IHtcbiAgICByZWFzb246ICdVbmV4cGVjdGVkIGVuZCBvZiBmaWxlIGluIGVsZW1lbnQgdGhhdCBjYW4gb25seSBjb250YWluIHRleHQnLFxuICAgIGRlc2NyaXB0aW9uOiAnVW5leHBlY3RlZCBlbmQgb2YgZmlsZS4gRXhwZWN0ZWQgdGV4dCBvciBhIGNsb3NpbmcgdGFnJyxcbiAgICB1cmw6IGZhbHNlXG4gIH0sXG4gIGVvZkluU2NyaXB0SHRtbENvbW1lbnRMaWtlVGV4dDoge1xuICAgIHJlYXNvbjogJ1VuZXhwZWN0ZWQgZW5kIG9mIGZpbGUgaW4gY29tbWVudCBpbnNpZGUgc2NyaXB0JyxcbiAgICBkZXNjcmlwdGlvbjogJ1VuZXhwZWN0ZWQgZW5kIG9mIGZpbGUuIEV4cGVjdGVkIGAtLT5gIHRvIGNsb3NlIHRoZSBjb21tZW50J1xuICB9LFxuICBlb2ZJblRhZzoge1xuICAgIHJlYXNvbjogJ1VuZXhwZWN0ZWQgZW5kIG9mIGZpbGUgaW4gdGFnJyxcbiAgICBkZXNjcmlwdGlvbjogJ1VuZXhwZWN0ZWQgZW5kIG9mIGZpbGUuIEV4cGVjdGVkIGA+YCB0byBjbG9zZSB0aGUgdGFnJ1xuICB9LFxuICBpbmNvcnJlY3RseUNsb3NlZENvbW1lbnQ6IHtcbiAgICByZWFzb246ICdJbmNvcnJlY3RseSBjbG9zZWQgY29tbWVudCcsXG4gICAgZGVzY3JpcHRpb246ICdVbmV4cGVjdGVkIGAlYy0xYC4gRXhwZWN0ZWQgYC0tPmAgdG8gY2xvc2UgdGhlIGNvbW1lbnQnXG4gIH0sXG4gIGluY29ycmVjdGx5T3BlbmVkQ29tbWVudDoge1xuICAgIHJlYXNvbjogJ0luY29ycmVjdGx5IG9wZW5lZCBjb21tZW50JyxcbiAgICBkZXNjcmlwdGlvbjogJ1VuZXhwZWN0ZWQgYCVjYC4gRXhwZWN0ZWQgYDwhLS1gIHRvIG9wZW4gdGhlIGNvbW1lbnQnXG4gIH0sXG4gIGludmFsaWRDaGFyYWN0ZXJTZXF1ZW5jZUFmdGVyRG9jdHlwZU5hbWU6IHtcbiAgICByZWFzb246ICdJbnZhbGlkIHNlcXVlbmNlIGFmdGVyIGRvY3R5cGUgbmFtZScsXG4gICAgZGVzY3JpcHRpb246ICdVbmV4cGVjdGVkIHNlcXVlbmNlIGF0IGAlY2AuIEV4cGVjdGVkIGBwdWJsaWNgIG9yIGBzeXN0ZW1gJ1xuICB9LFxuICBpbnZhbGlkRmlyc3RDaGFyYWN0ZXJPZlRhZ05hbWU6IHtcbiAgICByZWFzb246ICdJbnZhbGlkIGZpcnN0IGNoYXJhY3RlciBpbiB0YWcgbmFtZScsXG4gICAgZGVzY3JpcHRpb246ICdVbmV4cGVjdGVkIGAlY2AuIEV4cGVjdGVkIGFuIEFTQ0lJIGxldHRlciBpbnN0ZWFkJ1xuICB9LFxuICBtaXNwbGFjZWREb2N0eXBlOiB7XG4gICAgcmVhc29uOiAnTWlzcGxhY2VkIGRvY3R5cGUnLFxuICAgIGRlc2NyaXB0aW9uOiAnVW5leHBlY3RlZCBkb2N0eXBlLiBFeHBlY3RlZCBkb2N0eXBlIGJlZm9yZSBoZWFkJyxcbiAgICB1cmw6IGZhbHNlXG4gIH0sXG4gIG1pc3BsYWNlZFN0YXJ0VGFnRm9ySGVhZEVsZW1lbnQ6IHtcbiAgICByZWFzb246ICdNaXNwbGFjZWQgYDxoZWFkPmAgc3RhcnQgdGFnJyxcbiAgICBkZXNjcmlwdGlvbjpcbiAgICAgICdVbmV4cGVjdGVkIHN0YXJ0IHRhZyBgPGhlYWQ+YC4gRXhwZWN0ZWQgYDxoZWFkPmAgZGlyZWN0bHkgYWZ0ZXIgZG9jdHlwZScsXG4gICAgdXJsOiBmYWxzZVxuICB9LFxuICBtaXNzaW5nQXR0cmlidXRlVmFsdWU6IHtcbiAgICByZWFzb246ICdNaXNzaW5nIGF0dHJpYnV0ZSB2YWx1ZScsXG4gICAgZGVzY3JpcHRpb246XG4gICAgICAnVW5leHBlY3RlZCBgJWMtMWAuIEV4cGVjdGVkIGFuIGF0dHJpYnV0ZSB2YWx1ZSBvciBubyBgJWMtMWAgaW5zdGVhZCdcbiAgfSxcbiAgbWlzc2luZ0RvY3R5cGU6IHtcbiAgICByZWFzb246ICdNaXNzaW5nIGRvY3R5cGUgYmVmb3JlIG90aGVyIGNvbnRlbnQnLFxuICAgIGRlc2NyaXB0aW9uOiAnRXhwZWN0ZWQgYSBgPCFkb2N0eXBlIGh0bWw+YCBiZWZvcmUgYW55dGhpbmcgZWxzZScsXG4gICAgdXJsOiBmYWxzZVxuICB9LFxuICBtaXNzaW5nRG9jdHlwZU5hbWU6IHtcbiAgICByZWFzb246ICdNaXNzaW5nIGRvY3R5cGUgbmFtZScsXG4gICAgZGVzY3JpcHRpb246ICdVbmV4cGVjdGVkIGRvY3R5cGUgZW5kIGF0IGAlY2AuIEV4cGVjdGVkIGBodG1sYCBpbnN0ZWFkJ1xuICB9LFxuICBtaXNzaW5nRG9jdHlwZVB1YmxpY0lkZW50aWZpZXI6IHtcbiAgICByZWFzb246ICdNaXNzaW5nIHB1YmxpYyBpZGVudGlmaWVyIGluIGRvY3R5cGUnLFxuICAgIGRlc2NyaXB0aW9uOiAnVW5leHBlY3RlZCBgJWNgLiBFeHBlY3RlZCBpZGVudGlmaWVyIGZvciBgcHVibGljYCBpbnN0ZWFkJ1xuICB9LFxuICBtaXNzaW5nRG9jdHlwZVN5c3RlbUlkZW50aWZpZXI6IHtcbiAgICByZWFzb246ICdNaXNzaW5nIHN5c3RlbSBpZGVudGlmaWVyIGluIGRvY3R5cGUnLFxuICAgIGRlc2NyaXB0aW9uOlxuICAgICAgJ1VuZXhwZWN0ZWQgYCVjYC4gRXhwZWN0ZWQgaWRlbnRpZmllciBmb3IgYHN5c3RlbWAgaW5zdGVhZCAoc3VnZ2VzdGVkOiBgXCJhYm91dDpsZWdhY3ktY29tcGF0XCJgKSdcbiAgfSxcbiAgbWlzc2luZ0VuZFRhZ05hbWU6IHtcbiAgICByZWFzb246ICdNaXNzaW5nIG5hbWUgaW4gZW5kIHRhZycsXG4gICAgZGVzY3JpcHRpb246ICdVbmV4cGVjdGVkIGAlY2AuIEV4cGVjdGVkIGFuIEFTQ0lJIGxldHRlciBpbnN0ZWFkJ1xuICB9LFxuICBtaXNzaW5nUXVvdGVCZWZvcmVEb2N0eXBlUHVibGljSWRlbnRpZmllcjoge1xuICAgIHJlYXNvbjogJ01pc3NpbmcgcXVvdGUgYmVmb3JlIHB1YmxpYyBpZGVudGlmaWVyIGluIGRvY3R5cGUnLFxuICAgIGRlc2NyaXB0aW9uOiAnVW5leHBlY3RlZCBgJWNgLiBFeHBlY3RlZCBgXCJgIG9yIGBcXCdgIGluc3RlYWQnXG4gIH0sXG4gIG1pc3NpbmdRdW90ZUJlZm9yZURvY3R5cGVTeXN0ZW1JZGVudGlmaWVyOiB7XG4gICAgcmVhc29uOiAnTWlzc2luZyBxdW90ZSBiZWZvcmUgc3lzdGVtIGlkZW50aWZpZXIgaW4gZG9jdHlwZScsXG4gICAgZGVzY3JpcHRpb246ICdVbmV4cGVjdGVkIGAlY2AuIEV4cGVjdGVkIGBcImAgb3IgYFxcJ2AgaW5zdGVhZCdcbiAgfSxcbiAgbWlzc2luZ1NlbWljb2xvbkFmdGVyQ2hhcmFjdGVyUmVmZXJlbmNlOiB7XG4gICAgcmVhc29uOiAnTWlzc2luZyBzZW1pY29sb24gYWZ0ZXIgY2hhcmFjdGVyIHJlZmVyZW5jZScsXG4gICAgZGVzY3JpcHRpb246ICdVbmV4cGVjdGVkIGAlY2AuIEV4cGVjdGVkIGA7YCBpbnN0ZWFkJ1xuICB9LFxuICBtaXNzaW5nV2hpdGVzcGFjZUFmdGVyRG9jdHlwZVB1YmxpY0tleXdvcmQ6IHtcbiAgICByZWFzb246ICdNaXNzaW5nIHdoaXRlc3BhY2UgYWZ0ZXIgcHVibGljIGlkZW50aWZpZXIgaW4gZG9jdHlwZScsXG4gICAgZGVzY3JpcHRpb246ICdVbmV4cGVjdGVkIGAlY2AuIEV4cGVjdGVkIEFTQ0lJIHdoaXRlc3BhY2UgaW5zdGVhZCdcbiAgfSxcbiAgbWlzc2luZ1doaXRlc3BhY2VBZnRlckRvY3R5cGVTeXN0ZW1LZXl3b3JkOiB7XG4gICAgcmVhc29uOiAnTWlzc2luZyB3aGl0ZXNwYWNlIGFmdGVyIHN5c3RlbSBpZGVudGlmaWVyIGluIGRvY3R5cGUnLFxuICAgIGRlc2NyaXB0aW9uOiAnVW5leHBlY3RlZCBgJWNgLiBFeHBlY3RlZCBBU0NJSSB3aGl0ZXNwYWNlIGluc3RlYWQnXG4gIH0sXG4gIG1pc3NpbmdXaGl0ZXNwYWNlQmVmb3JlRG9jdHlwZU5hbWU6IHtcbiAgICByZWFzb246ICdNaXNzaW5nIHdoaXRlc3BhY2UgYmVmb3JlIGRvY3R5cGUgbmFtZScsXG4gICAgZGVzY3JpcHRpb246ICdVbmV4cGVjdGVkIGAlY2AuIEV4cGVjdGVkIEFTQ0lJIHdoaXRlc3BhY2UgaW5zdGVhZCdcbiAgfSxcbiAgbWlzc2luZ1doaXRlc3BhY2VCZXR3ZWVuQXR0cmlidXRlczoge1xuICAgIHJlYXNvbjogJ01pc3Npbmcgd2hpdGVzcGFjZSBiZXR3ZWVuIGF0dHJpYnV0ZXMnLFxuICAgIGRlc2NyaXB0aW9uOiAnVW5leHBlY3RlZCBgJWNgLiBFeHBlY3RlZCBBU0NJSSB3aGl0ZXNwYWNlIGluc3RlYWQnXG4gIH0sXG4gIG1pc3NpbmdXaGl0ZXNwYWNlQmV0d2VlbkRvY3R5cGVQdWJsaWNBbmRTeXN0ZW1JZGVudGlmaWVyczoge1xuICAgIHJlYXNvbjpcbiAgICAgICdNaXNzaW5nIHdoaXRlc3BhY2UgYmV0d2VlbiBwdWJsaWMgYW5kIHN5c3RlbSBpZGVudGlmaWVycyBpbiBkb2N0eXBlJyxcbiAgICBkZXNjcmlwdGlvbjogJ1VuZXhwZWN0ZWQgYCVjYC4gRXhwZWN0ZWQgQVNDSUkgd2hpdGVzcGFjZSBpbnN0ZWFkJ1xuICB9LFxuICBuZXN0ZWRDb21tZW50OiB7XG4gICAgcmVhc29uOiAnVW5leHBlY3RlZCBuZXN0ZWQgY29tbWVudCcsXG4gICAgZGVzY3JpcHRpb246ICdVbmV4cGVjdGVkIGA8IS0tYC4gRXhwZWN0ZWQgYC0tPmAnXG4gIH0sXG4gIG5lc3RlZE5vc2NyaXB0SW5IZWFkOiB7XG4gICAgcmVhc29uOiAnVW5leHBlY3RlZCBuZXN0ZWQgYDxub3NjcmlwdD5gIGluIGA8aGVhZD5gJyxcbiAgICBkZXNjcmlwdGlvbjpcbiAgICAgICdVbmV4cGVjdGVkIGA8bm9zY3JpcHQ+YC4gRXhwZWN0ZWQgYSBjbG9zaW5nIHRhZyBvciBhIG1ldGEgZWxlbWVudCcsXG4gICAgdXJsOiBmYWxzZVxuICB9LFxuICBub25Db25mb3JtaW5nRG9jdHlwZToge1xuICAgIHJlYXNvbjogJ1VuZXhwZWN0ZWQgbm9uLWNvbmZvcm1pbmcgZG9jdHlwZSBkZWNsYXJhdGlvbicsXG4gICAgZGVzY3JpcHRpb246XG4gICAgICAnRXhwZWN0ZWQgYDwhZG9jdHlwZSBodG1sPmAgb3IgYDwhZG9jdHlwZSBodG1sIHN5c3RlbSBcImFib3V0OmxlZ2FjeS1jb21wYXRcIj5gJyxcbiAgICB1cmw6IGZhbHNlXG4gIH0sXG4gIG5vblZvaWRIdG1sRWxlbWVudFN0YXJ0VGFnV2l0aFRyYWlsaW5nU29saWR1czoge1xuICAgIHJlYXNvbjogJ1VuZXhwZWN0ZWQgdHJhaWxpbmcgc2xhc2ggb24gc3RhcnQgdGFnIG9mIG5vbi12b2lkIGVsZW1lbnQnLFxuICAgIGRlc2NyaXB0aW9uOiAnVW5leHBlY3RlZCBgL2AuIEV4cGVjdGVkIGA+YCBpbnN0ZWFkJ1xuICB9LFxuICBub25jaGFyYWN0ZXJDaGFyYWN0ZXJSZWZlcmVuY2U6IHtcbiAgICByZWFzb246XG4gICAgICAnVW5leHBlY3RlZCBub25jaGFyYWN0ZXIgY29kZSBwb2ludCByZWZlcmVuY2VkIGJ5IGNoYXJhY3RlciByZWZlcmVuY2UnLFxuICAgIGRlc2NyaXB0aW9uOiAnVW5leHBlY3RlZCBjb2RlIHBvaW50LiBEbyBub3QgdXNlIG5vbmNoYXJhY3RlcnMgaW4gSFRNTCdcbiAgfSxcbiAgbm9uY2hhcmFjdGVySW5JbnB1dFN0cmVhbToge1xuICAgIHJlYXNvbjogJ1VuZXhwZWN0ZWQgbm9uY2hhcmFjdGVyIGNoYXJhY3RlcicsXG4gICAgZGVzY3JpcHRpb246ICdVbmV4cGVjdGVkIGNvZGUgcG9pbnQgYCV4YC4gRG8gbm90IHVzZSBub25jaGFyYWN0ZXJzIGluIEhUTUwnXG4gIH0sXG4gIG51bGxDaGFyYWN0ZXJSZWZlcmVuY2U6IHtcbiAgICByZWFzb246ICdVbmV4cGVjdGVkIE5VTEwgY2hhcmFjdGVyIHJlZmVyZW5jZWQgYnkgY2hhcmFjdGVyIHJlZmVyZW5jZScsXG4gICAgZGVzY3JpcHRpb246ICdVbmV4cGVjdGVkIGNvZGUgcG9pbnQuIERvIG5vdCB1c2UgTlVMTCBjaGFyYWN0ZXJzIGluIEhUTUwnXG4gIH0sXG4gIG9wZW5FbGVtZW50c0xlZnRBZnRlckVvZjoge1xuICAgIHJlYXNvbjogJ1VuZXhwZWN0ZWQgZW5kIG9mIGZpbGUnLFxuICAgIGRlc2NyaXB0aW9uOiAnVW5leHBlY3RlZCBlbmQgb2YgZmlsZS4gRXhwZWN0ZWQgY2xvc2luZyB0YWcgaW5zdGVhZCcsXG4gICAgdXJsOiBmYWxzZVxuICB9LFxuICBzdXJyb2dhdGVDaGFyYWN0ZXJSZWZlcmVuY2U6IHtcbiAgICByZWFzb246ICdVbmV4cGVjdGVkIHN1cnJvZ2F0ZSBjaGFyYWN0ZXIgcmVmZXJlbmNlZCBieSBjaGFyYWN0ZXIgcmVmZXJlbmNlJyxcbiAgICBkZXNjcmlwdGlvbjpcbiAgICAgICdVbmV4cGVjdGVkIGNvZGUgcG9pbnQuIERvIG5vdCB1c2UgbG9uZSBzdXJyb2dhdGUgY2hhcmFjdGVycyBpbiBIVE1MJ1xuICB9LFxuICBzdXJyb2dhdGVJbklucHV0U3RyZWFtOiB7XG4gICAgcmVhc29uOiAnVW5leHBlY3RlZCBzdXJyb2dhdGUgY2hhcmFjdGVyJyxcbiAgICBkZXNjcmlwdGlvbjpcbiAgICAgICdVbmV4cGVjdGVkIGNvZGUgcG9pbnQgYCV4YC4gRG8gbm90IHVzZSBsb25lIHN1cnJvZ2F0ZSBjaGFyYWN0ZXJzIGluIEhUTUwnXG4gIH0sXG4gIHVuZXhwZWN0ZWRDaGFyYWN0ZXJBZnRlckRvY3R5cGVTeXN0ZW1JZGVudGlmaWVyOiB7XG4gICAgcmVhc29uOiAnSW52YWxpZCBjaGFyYWN0ZXIgYWZ0ZXIgc3lzdGVtIGlkZW50aWZpZXIgaW4gZG9jdHlwZScsXG4gICAgZGVzY3JpcHRpb246ICdVbmV4cGVjdGVkIGNoYXJhY3RlciBhdCBgJWNgLiBFeHBlY3RlZCBgPmAnXG4gIH0sXG4gIHVuZXhwZWN0ZWRDaGFyYWN0ZXJJbkF0dHJpYnV0ZU5hbWU6IHtcbiAgICByZWFzb246ICdVbmV4cGVjdGVkIGNoYXJhY3RlciBpbiBhdHRyaWJ1dGUgbmFtZScsXG4gICAgZGVzY3JpcHRpb246XG4gICAgICAnVW5leHBlY3RlZCBgJWNgLiBFeHBlY3RlZCB3aGl0ZXNwYWNlLCBgL2AsIGA+YCwgYD1gLCBvciBwcm9iYWJseSBhbiBBU0NJSSBsZXR0ZXInXG4gIH0sXG4gIHVuZXhwZWN0ZWRDaGFyYWN0ZXJJblVucXVvdGVkQXR0cmlidXRlVmFsdWU6IHtcbiAgICByZWFzb246ICdVbmV4cGVjdGVkIGNoYXJhY3RlciBpbiB1bnF1b3RlZCBhdHRyaWJ1dGUgdmFsdWUnLFxuICAgIGRlc2NyaXB0aW9uOiAnVW5leHBlY3RlZCBgJWNgLiBRdW90ZSB0aGUgYXR0cmlidXRlIHZhbHVlIHRvIGluY2x1ZGUgaXQnXG4gIH0sXG4gIHVuZXhwZWN0ZWRFcXVhbHNTaWduQmVmb3JlQXR0cmlidXRlTmFtZToge1xuICAgIHJlYXNvbjogJ1VuZXhwZWN0ZWQgZXF1YWxzIHNpZ24gYmVmb3JlIGF0dHJpYnV0ZSBuYW1lJyxcbiAgICBkZXNjcmlwdGlvbjogJ1VuZXhwZWN0ZWQgYCVjYC4gQWRkIGFuIGF0dHJpYnV0ZSBuYW1lIGJlZm9yZSBpdCdcbiAgfSxcbiAgdW5leHBlY3RlZE51bGxDaGFyYWN0ZXI6IHtcbiAgICByZWFzb246ICdVbmV4cGVjdGVkIE5VTEwgY2hhcmFjdGVyJyxcbiAgICBkZXNjcmlwdGlvbjpcbiAgICAgICdVbmV4cGVjdGVkIGNvZGUgcG9pbnQgYCV4YC4gRG8gbm90IHVzZSBOVUxMIGNoYXJhY3RlcnMgaW4gSFRNTCdcbiAgfSxcbiAgdW5leHBlY3RlZFF1ZXN0aW9uTWFya0luc3RlYWRPZlRhZ05hbWU6IHtcbiAgICByZWFzb246ICdVbmV4cGVjdGVkIHF1ZXN0aW9uIG1hcmsgaW5zdGVhZCBvZiB0YWcgbmFtZScsXG4gICAgZGVzY3JpcHRpb246ICdVbmV4cGVjdGVkIGAlY2AuIEV4cGVjdGVkIGFuIEFTQ0lJIGxldHRlciBpbnN0ZWFkJ1xuICB9LFxuICB1bmV4cGVjdGVkU29saWR1c0luVGFnOiB7XG4gICAgcmVhc29uOiAnVW5leHBlY3RlZCBzbGFzaCBpbiB0YWcnLFxuICAgIGRlc2NyaXB0aW9uOlxuICAgICAgJ1VuZXhwZWN0ZWQgYCVjLTFgLiBFeHBlY3RlZCBpdCBmb2xsb3dlZCBieSBgPmAgb3IgaW4gYSBxdW90ZWQgYXR0cmlidXRlIHZhbHVlJ1xuICB9LFxuICB1bmtub3duTmFtZWRDaGFyYWN0ZXJSZWZlcmVuY2U6IHtcbiAgICByZWFzb246ICdVbmV4cGVjdGVkIHVua25vd24gbmFtZWQgY2hhcmFjdGVyIHJlZmVyZW5jZScsXG4gICAgZGVzY3JpcHRpb246XG4gICAgICAnVW5leHBlY3RlZCBjaGFyYWN0ZXIgcmVmZXJlbmNlLiBFeHBlY3RlZCBrbm93biBuYW1lZCBjaGFyYWN0ZXIgcmVmZXJlbmNlcydcbiAgfVxufVxuIl0sIm5hbWVzIjpbImVycm9ycyIsImFiYW5kb25lZEhlYWRFbGVtZW50Q2hpbGQiLCJyZWFzb24iLCJkZXNjcmlwdGlvbiIsInVybCIsImFicnVwdENsb3NpbmdPZkVtcHR5Q29tbWVudCIsImFicnVwdERvY3R5cGVQdWJsaWNJZGVudGlmaWVyIiwiYWJydXB0RG9jdHlwZVN5c3RlbUlkZW50aWZpZXIiLCJhYnNlbmNlT2ZEaWdpdHNJbk51bWVyaWNDaGFyYWN0ZXJSZWZlcmVuY2UiLCJjZGF0YUluSHRtbENvbnRlbnQiLCJjaGFyYWN0ZXJSZWZlcmVuY2VPdXRzaWRlVW5pY29kZVJhbmdlIiwiY2xvc2luZ09mRWxlbWVudFdpdGhPcGVuQ2hpbGRFbGVtZW50cyIsImNvbnRyb2xDaGFyYWN0ZXJJbklucHV0U3RyZWFtIiwiY29udHJvbENoYXJhY3RlclJlZmVyZW5jZSIsImRpc2FsbG93ZWRDb250ZW50SW5Ob3NjcmlwdEluSGVhZCIsImR1cGxpY2F0ZUF0dHJpYnV0ZSIsImVuZFRhZ1dpdGhBdHRyaWJ1dGVzIiwiZW5kVGFnV2l0aFRyYWlsaW5nU29saWR1cyIsImVuZFRhZ1dpdGhvdXRNYXRjaGluZ09wZW5FbGVtZW50IiwiZW9mQmVmb3JlVGFnTmFtZSIsImVvZkluQ2RhdGEiLCJlb2ZJbkNvbW1lbnQiLCJlb2ZJbkRvY3R5cGUiLCJlb2ZJbkVsZW1lbnRUaGF0Q2FuQ29udGFpbk9ubHlUZXh0IiwiZW9mSW5TY3JpcHRIdG1sQ29tbWVudExpa2VUZXh0IiwiZW9mSW5UYWciLCJpbmNvcnJlY3RseUNsb3NlZENvbW1lbnQiLCJpbmNvcnJlY3RseU9wZW5lZENvbW1lbnQiLCJpbnZhbGlkQ2hhcmFjdGVyU2VxdWVuY2VBZnRlckRvY3R5cGVOYW1lIiwiaW52YWxpZEZpcnN0Q2hhcmFjdGVyT2ZUYWdOYW1lIiwibWlzcGxhY2VkRG9jdHlwZSIsIm1pc3BsYWNlZFN0YXJ0VGFnRm9ySGVhZEVsZW1lbnQiLCJtaXNzaW5nQXR0cmlidXRlVmFsdWUiLCJtaXNzaW5nRG9jdHlwZSIsIm1pc3NpbmdEb2N0eXBlTmFtZSIsIm1pc3NpbmdEb2N0eXBlUHVibGljSWRlbnRpZmllciIsIm1pc3NpbmdEb2N0eXBlU3lzdGVtSWRlbnRpZmllciIsIm1pc3NpbmdFbmRUYWdOYW1lIiwibWlzc2luZ1F1b3RlQmVmb3JlRG9jdHlwZVB1YmxpY0lkZW50aWZpZXIiLCJtaXNzaW5nUXVvdGVCZWZvcmVEb2N0eXBlU3lzdGVtSWRlbnRpZmllciIsIm1pc3NpbmdTZW1pY29sb25BZnRlckNoYXJhY3RlclJlZmVyZW5jZSIsIm1pc3NpbmdXaGl0ZXNwYWNlQWZ0ZXJEb2N0eXBlUHVibGljS2V5d29yZCIsIm1pc3NpbmdXaGl0ZXNwYWNlQWZ0ZXJEb2N0eXBlU3lzdGVtS2V5d29yZCIsIm1pc3NpbmdXaGl0ZXNwYWNlQmVmb3JlRG9jdHlwZU5hbWUiLCJtaXNzaW5nV2hpdGVzcGFjZUJldHdlZW5BdHRyaWJ1dGVzIiwibWlzc2luZ1doaXRlc3BhY2VCZXR3ZWVuRG9jdHlwZVB1YmxpY0FuZFN5c3RlbUlkZW50aWZpZXJzIiwibmVzdGVkQ29tbWVudCIsIm5lc3RlZE5vc2NyaXB0SW5IZWFkIiwibm9uQ29uZm9ybWluZ0RvY3R5cGUiLCJub25Wb2lkSHRtbEVsZW1lbnRTdGFydFRhZ1dpdGhUcmFpbGluZ1NvbGlkdXMiLCJub25jaGFyYWN0ZXJDaGFyYWN0ZXJSZWZlcmVuY2UiLCJub25jaGFyYWN0ZXJJbklucHV0U3RyZWFtIiwibnVsbENoYXJhY3RlclJlZmVyZW5jZSIsIm9wZW5FbGVtZW50c0xlZnRBZnRlckVvZiIsInN1cnJvZ2F0ZUNoYXJhY3RlclJlZmVyZW5jZSIsInN1cnJvZ2F0ZUluSW5wdXRTdHJlYW0iLCJ1bmV4cGVjdGVkQ2hhcmFjdGVyQWZ0ZXJEb2N0eXBlU3lzdGVtSWRlbnRpZmllciIsInVuZXhwZWN0ZWRDaGFyYWN0ZXJJbkF0dHJpYnV0ZU5hbWUiLCJ1bmV4cGVjdGVkQ2hhcmFjdGVySW5VbnF1b3RlZEF0dHJpYnV0ZVZhbHVlIiwidW5leHBlY3RlZEVxdWFsc1NpZ25CZWZvcmVBdHRyaWJ1dGVOYW1lIiwidW5leHBlY3RlZE51bGxDaGFyYWN0ZXIiLCJ1bmV4cGVjdGVkUXVlc3Rpb25NYXJrSW5zdGVhZE9mVGFnTmFtZSIsInVuZXhwZWN0ZWRTb2xpZHVzSW5UYWciLCJ1bmtub3duTmFtZWRDaGFyYWN0ZXJSZWZlcmVuY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-from-html/lib/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-from-html/lib/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/hast-util-from-html/lib/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromHtml: () => (/* binding */ fromHtml)\n/* harmony export */ });\n/* harmony import */ var parse5__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! parse5 */ \"(ssr)/./node_modules/parse5/dist/index.js\");\n/* harmony import */ var vfile__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vfile */ \"(ssr)/./node_modules/vfile/lib/index.js\");\n/* harmony import */ var vfile_message__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vfile-message */ \"(ssr)/./node_modules/vfile-message/lib/index.js\");\n/* harmony import */ var hast_util_from_parse5__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! hast-util-from-parse5 */ \"(ssr)/./node_modules/hast-util-from-parse5/lib/index.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/./node_modules/hast-util-from-html/lib/errors.js\");\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n */ /**\n * @typedef {Pick<import('hast-util-from-parse5').Options, 'space' | 'verbose'>} FromParse5Options\n *\n * @typedef {keyof errors} ErrorCode\n *   Known names of parse errors.\n * @typedef {0 | 1 | 2 | boolean} ErrorSeverity\n *   Error severity:\n *\n *   * `0` or `false`\n *     — turn the parse error off\n *   * `1` or `true`\n *     — turn the parse error into a warning\n *   * `2`\n *     — turn the parse error into an actual error: processing stops.\n * @typedef {Partial<Record<ErrorCode, ErrorSeverity | null | undefined>>} ErrorFields\n *   Error configuration.\n *\n * @typedef Error\n *   Error from `parse5`.\n * @property {string} code\n * @property {number} startLine\n * @property {number} startCol\n * @property {number} startOffset\n * @property {number} endLine\n * @property {number} endCol\n * @property {number} endOffset\n *\n * @callback OnError\n *   Handle errors.\n * @param {VFileMessage} error\n *   Message.\n * @returns {void}\n *   Nothing.\n *\n * @typedef ParseFields\n * @property {boolean | null | undefined} [fragment=false]\n *   Specify whether to parse a fragment, instead of a complete document.\n *\n *   In document mode, unopened `html`, `head`, and `body` elements are opened\n *   in just the right places.\n * @property {OnError | null | undefined} [onerror]\n *   Call `onerror` with parse errors while parsing.\n *\n *   > 👉 **Note**: parse errors are currently being added to HTML.\n *   > Not all errors emitted by parse5 (or us) are specced yet.\n *   > Some documentation may still be missing.\n *\n *   Specific rules can be turned off by setting them to `false` (or `0`).\n *   The default, when `emitParseErrors: true`, is `true` (or `1`), and means\n *   that rules emit as warnings.\n *   Rules can also be configured with `2`, to turn them into fatal errors.\n *\n * @typedef {FromParse5Options & ParseFields & ErrorFields} Options\n *   Configuration.\n */ \n\n\n\n\nconst base = \"https://html.spec.whatwg.org/multipage/parsing.html#parse-error-\";\nconst fatalities = {\n    2: true,\n    1: false,\n    0: null\n};\n/**\n * Turn serialized HTML into a hast tree.\n *\n * @param {VFileCompatible} value\n *   Serialized HTML to parse.\n * @param {Options | null | undefined} [options={}]\n *   Configuration (optional).\n * @returns {Root}\n *   Tree.\n */ function fromHtml(value, options) {\n    const settings = options || {};\n    const warn = settings.onerror || null;\n    const file = value instanceof vfile__WEBPACK_IMPORTED_MODULE_1__.VFile ? value : new vfile__WEBPACK_IMPORTED_MODULE_1__.VFile(value);\n    const fn = settings.fragment ? parse5__WEBPACK_IMPORTED_MODULE_0__.parseFragment : parse5__WEBPACK_IMPORTED_MODULE_0__.parse;\n    const doc = String(file);\n    const p5doc = fn(doc, {\n        sourceCodeLocationInfo: true,\n        onParseError: settings.onerror ? onerror : null,\n        scriptingEnabled: false\n    });\n    // @ts-expect-error: `parse5` returns document or fragment, which are always\n    // mapped to roots.\n    return (0,hast_util_from_parse5__WEBPACK_IMPORTED_MODULE_2__.fromParse5)(p5doc, {\n        file,\n        space: settings.space,\n        verbose: settings.verbose\n    });\n    /**\n   * @param {Error} error\n   */ function onerror(error) {\n        const code = error.code;\n        const name = camelcase(code);\n        const setting = settings[name];\n        const config = setting === undefined || setting === null ? true : setting;\n        const level = typeof config === \"number\" ? config : config ? 1 : 0;\n        const start = {\n            line: error.startLine,\n            column: error.startCol,\n            offset: error.startOffset\n        };\n        const end = {\n            line: error.endLine,\n            column: error.endCol,\n            offset: error.endOffset\n        };\n        if (level) {\n            /* c8 ignore next */ const info = _errors_js__WEBPACK_IMPORTED_MODULE_3__.errors[name] || {\n                reason: \"\",\n                description: \"\",\n                url: \"\"\n            };\n            const message = new vfile_message__WEBPACK_IMPORTED_MODULE_4__.VFileMessage(format(info.reason), {\n                start,\n                end\n            });\n            if (file.path) {\n                message.name = file.path + \":\" + message.name;\n                message.file = file.path;\n            }\n            message.source = \"parse-error\";\n            message.ruleId = code;\n            message.fatal = fatalities[level];\n            message.note = format(info.description);\n            message.url = \"url\" in info && info.url === false ? null : base + code;\n            // @ts-expect-error: `onerror` is not passed if `warn` is not set.\n            warn(message);\n        }\n        /**\n     * @param {string} value\n     * @returns {string}\n     */ function format(value) {\n            return value.replace(/%c(?:([-+])(\\d+))?/g, (_, /** @type {string} */ $1, /** @type {string} */ $2)=>{\n                const offset = ($2 ? Number.parseInt($2, 10) : 0) * ($1 === \"-\" ? -1 : 1);\n                const char = doc.charAt(error.startOffset + offset);\n                return char === \"`\" ? \"` ` `\" : char;\n            }).replace(/%x/g, ()=>\"0x\" + doc.charCodeAt(error.startOffset).toString(16).toUpperCase());\n        }\n    }\n}\n/**\n * @param {string} value\n * @returns {ErrorCode}\n */ function camelcase(value) {\n    // @ts-expect-error: fine.\n    return value.replace(/-[a-z]/g, ($0)=>$0.charAt(1).toUpperCase());\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-from-html/lib/index.js\n");

/***/ })

};
;